#Sat Aug 12 02:19:01 EDT 2017
JNCK049=JNI error in %s\: va_list reuse detected
JNCK048=JNI error in %s\: Ineligible receiver
JNCK047=JNI error in %s\: Incorrect clazz argument
JNCK046=JNI error in %1$s\: Method has wrong return type ('%2$c')
JNCK045=JNI error in %s\: Method is not static
JNCK044=JNI error in %s\: Method is static
JNCK043=JNI error in %1$s\: Argument \#%2$d; unable to find %3$s
JNCK042=JNI error in %1$s\: Argument \#%2$d is not a subclass of %3$s
SHRC189=\# AOT Methods      \= %d
JNCK041=JNI error in %1$s\: Argument \#%2$d is out of range for a %3$s (0x%4$x > 0x%5$x)
SHRC188=AOT bytes          \= %d
JNCK040=JNI error in %1$s\: Argument \#%2$d is out of range for a %3$s (0x%4$x < 0x%5$x)
SHRC187=Disable storing of AOT data in the shared cache
SHRC186=\tPartition %.*s in ModContext %.*s
SHRC185=\tModContext %.*s
SHRC184=\tPartition %.*s
SHRC183=Cannot create hashtable in ScopeManagerImpl
SHRC182=Cannot create monitor in ScopeManagerImpl
SHRC181=Cannot enter ScopeManagerImpl hashtable mutex
SHRC180=Cannot allocate memory for hashtable entry in ScopeManagerImpl
JNCK039=JNI error in %1$s\: Argument \#%2$d is NULL
JNCK038=JNI error in %1$s\: Argument \#%2$d (0x%3$p) is not a valid object reference. It's type is\: %4$s\n
JNCK037=JNI error in %1$s\: Argument \#%2$d (0x%3$p) is not a local reference. Its type is\: %4$s
JNCK036=JNI error in %1$s\: Argument \#%2$d (0x%3$p) is not a weak global reference. Its type is\: %4$s
JNCK035=JNI error in %1$s\: Argument \#%2$d (0x%3$p) is not a global reference. Its type is\: %4$s
JNCK034=JNI error in %1$s\: Argument \#%2$d is not a %3$s
JNCK033=JNI error in %1$s\: Argument \#%2$d is not a jarray
JNCK032=JNI error in %1$s\: Argument \#%2$d is not a jobjectArray
SHRC179=The ROMClass segment has been corrupted. Error reading ROMClass at 0x%p
JNCK031=JNI error in %1$s\: Argument \#%2$d is NULL
SHRC178=Ignoring noIncrementalUpdates option due to use of singleJVM option
JNCK030=JNI error in %s\: This function cannot be called while GC is disabled (it was probably called from a JVMPI or JVMTI event)
SHRC177=Cannot run safemode due to use of singleJVM option
SHRC176=String invariant relocation enabled
SHRC175=Make the cache persist beyond reboots (Win only)
SHRC174=Enable optimizations for single JVM use
SHRC173=Set the directory for JVM control files (advanced)
SHRC172=Cannot create cache of requested size due to Operating System restrictions 
SHRC171=z/OS cannot create cache of requested size\: Please check your z/OS system BPXPRMxx settings
SHRC170=Specify name of shared cache\n \t(Use %%u to substitute username)
JNCK029=JNI error in %s\: This function cannot be called inside of a critical section
JNCK028=JNI error in %s\: This function cannot be called when an exception is pending
ZIPS001=Unable to open %s (Missing export)
JNCK027=JNI error in %s\: JNIEnv is not the JNIEnv for the active thread
ZIPS000=Unable to open %1$s (%2$s)
JNCK026=JNI error in %s\: JNIEnv does not appear to be a valid thread, or memory has been corrupted, or this is not a J9 virtual machine
JNCK025=Use -Xcheck\:jni\:nonfatal to continue running when errors are detected.
JNCK024=JNI error detected. Aborting.
JNCK023=JNI error detected. Continuing...
JNCK022=freed local reference
SHRC169=Change detected in %2$.*1$s...\n \t...marked %3$d cached classes stale
JNCK021=local reference in another thread
SHRC168=Total shared class bytes read\=%1$lld. Total bytes stored\=%2$d
JNCK020=debugger reference
SHRC167=Disables class sharing
SHRC166=Attached to cache "%1$s", size\=%2$d bytes
SHRC165=[-Xshareclasses Helper API verbose output enabled]
SHRC164=[-Xshareclasses verbose I/O output enabled]
SHRC163=[-Xshareclasses verbose output enabled]
SHRC162=The wait for the creation mutex while opening shared memory has timed out
SHRC161=The wait for the creation mutex while creating shared memory has timed out
SHRC160=The wait for the creation mutex while opening semaphore has timed out
JNCK019=weak global reference
JNCK018=global reference
JNCK017=local reference
JNCK016=NULL
JNCK015=\thelp           print this screen
JNCK014=\tpedantic       perform more thorough, but slower checks
JNCK013=\tnovalist       do not check for va_list reuse
JNCK012=\tnoadvice       do not display advice
SHRC159=Opened shared class cache "%1$s"
JNCK011=\tnowarn         do not display warnings
SHRC158=Created shared class cache "%1$s"
JNCK010=\tnonfatal       do not exit when errors are detected
SHRC157=Unable to allocate %1$d bytes of shared memory requested \n \tSuccessfully allocated maximum shared memory permitted (%2$d bytes) \n \t(To increase available shared memory, modify system SHMMAX value)
SHRC156=Error copying groupname into cache name
SHRC155=Error copying username into cache name
SHRC154=Escape character %.*s not valid for cache name
SHRC153=Specify name of shared cache\n \t(Use %%g to substitute groupname and %%u for username)
SHRC152=Always start JVM regardless of errors/warnings
SHRC151=Suppress all messages
SHRC150=Enable helper API verbose output
JNCK009=\tnobounds       do not perform bounds checking on strings and arrays
JNCK008=\ttrace          trace all JNI functions
JNCK007=\tverbose        trace certain JNI functions and activities
JNCK006=\tall            check application and system classes
JNCK005=Usage\: -Xcheck\:jni\:[option[,option[,...]]]
JNCK004=jnichk - JNI Check utility for J9, Version %s
JNCK003=JNI check utility\: unable to allocate VM local storage
JNCK002=JNI check utility\: unable to hook event
SHRC149=Enable verbose find/store output
JNCK001=JNI check utility installed. Use -Xcheck\:jni\:help for usage
SHRC148=Allow group access to cache (user is default)
JNCK000=-Xcheck\:jni\: unrecognized option --> '%s'
SHRC147=Character %.*s not valid for cache name
SHRC146=Finding class %1$s in shared cache for class-loader id %2$d with Token %4$.*3$s...
SHRC145=Finding class %1$s in shared cache for class-loader id %2$d with URL %4$.*3$s...
SHRC144=Storing class %2$.*1$s in shared cache for class-loader id %3$d with Token %5$.*4$s...
SHRC143=Storing class %2$.*1$s in shared cache for class-loader id %3$d with URL %5$.*4$s...
SHRC142=\tat 0x%1$p\t\t%2$x \!\= %3$x
SHRC141=mismatched bytes\:
SHRC140=size\:\t%1$d\t\t\t%2$d\n
SHRC139=\n\tROMClass being stored\tROMClass in cache
SHRC138=Found more than one orphan ROMClass for %.*s
SHRC499=Placeholder, not used 
SHRC137=SAFE MODE\: Warning\: ROMClass %.*s does not match ROMClass in cache
SHRC498=Placeholder, not used 
SHRC136=Cannot create monitor in SH_ROMClassManagerImpl
SHRC497=Placeholder, not used 
SHRC135=Failed to create hashtable in SH_ROMClassManagerImpl
SHRC496=Failed to update %1$s attached data for address 0x%2$p, reason\: %3$s
SHRC134=Failed to create pool in SH_ROMClassManagerImpl
SHRC495=Failed to store %1$s attached data for address 0x%2$p, reason\: %3$s
SHRC133=Cannot enter ROMClassManager hashtable mutex
SHRC494=Failed to find %1$s attached data for address 0x%2$p, reason\: %3$s
SHRC132=Cannot allocate memory for hashtable entry in ROMClassManagerImpl
SHRC493=Failed to find %1$s attached data for %8$.*7$s.%4$.*3$s%6$.*5$s, reason\: %2$s
SHRC131=Cannot allocate memory for linked list item in ROMClassManagerImpl
SHRC492=Failed to update %1$s attached data for %8$.*7$s.%4$.*3$s%6$.*5$s, reason\: %2$s
SHRC130=Attempt to allocate while commit is still pending
SHRC491=Failed to store %1$s attached data for %8$.*7$s.%4$.*3$s%6$.*5$s, reason\: %2$s
SHRC490=Force discovery of a corrupt shared classes cache
SHRC129=Attempt to set readerCount to -1\!
SHRC128=SH_CompositeCache\:\:exitMutex failed with return code %d. Warning\: your cache may be corrupt.
SHRC489=If opened cache is marked corrupt, trigger a cache dump event
SHRC127=SH_CompositeCache\:\:enterMutex failed with return code %d. Warning\: your cache may be corrupt.
SHRC488=Total of -Xscminaot and -Xscminjitdata values should not be greater than available cache size
SHRC126=Request made to add too many items to ClasspathItem
SHRC487=Maximum space for JIT data bytes    %*c\= %d
SHRC125=Could not allocate memory for string buffer in SH_CacheMap
SHRC486=Reserved space for JIT data bytes   %*c\= %d
SHRC124=Cache is %1$d%% full\n
SHRC485=Maximum space for AOT bytes         %*c\= %d
SHRC123=%% Stale classes    \= %1$d%%\n
SHRC484=Reserved space for AOT bytes        %*c\= %d
SHRC122=\# Stale classes    \= %d
SHRC483=cache refresh failed
SHRC121=\# Tokens           \= %d
SHRC482=address is not in cache
SHRC120=\# URLs             \= %d
SHRC481=cache is corrupt
SHRC480=too many updates while reading
EXEL099=\  -Xrealtime -Xnortsj           enable soft realtime
EXEL098=\  -Xgcpolicy\:metronome          enable soft realtime
EXEL097=\  -Xrealtime                    enable soft realtime
EXEL096=\  -Xgcpolicy\:metronome          enable realtime extensions
EXEL095=\  -Xrealtime                    enable realtime extensions
EXEL094=\  -Xcompressedrefs              use compressed heap references
EXEL093=The following options control global VM configuration\:
EXEL092=\n  -Xdump[\:option,...]  control dumps use -Xdump\:help for more details
SHRC119=\# Classpaths       \= %d
EXEL091=\n  -Xcheck[\:option[\:...]]  control checking use -Xcheck\:help for more details
SHRC118=\# ROMClasses       \= %d
EXEL090=\  -Xscmaxaot<x>   set maximum shared classes cache space allowed for AOT data to <x>
SHRC479=memory allocation of %d bytes failed
SHRC117=Metadata %% used    \= %1$d%%\n
SHRC478=data size %d larger than available %d
SHRC116=Metadata bytes     \= %d
SHRC477=no space in cache for %d bytes
SHRC115=ROMClass bytes     \= %d
SHRC476=data already exists
SHRC114=free bytes         \= %d
SHRC475=no data exists
SHRC113=cache size         \= %d
SHRC474=enterReadMutex failed
SHRC112=allocation pointer \= 0x%p\n
SHRC473=enterWriteMutex failed
SHRC111=end address        \= 0x%p
SHRC472=no access to resource
SHRC110=\nbase address       \= 0x%p
SHRC471=Failed to update %1$s attached data for %8$.*7$s.%4$.*3$s%6$.*5$s, reason\:%2$s
SHRC470=Updated %1$s attached data for %7$.*6$s.%3$.*2$s%5$.*4$s
EXEL089=\  -Xscminaot<x>   set minimum shared classes cache space reserved for AOT data to <x>
MECK002=An error occurred creating the call site data structure. Call site information will not be displayed
EXEL087=\  -Xjni\:<options>               set JNI options
MECK001=Unrecognized -Xcheck\:memory option\: %s
EXEL086=\n  -Xtrace[\:option,...]  control tracing use -Xtrace\:help for more details
MECK000=An error occurred initializing the -Xcheck\:memory utility
EXEL085=\nWARNING\: The command line argument "%s" has been deprecated.\nWARNING\: Use "-jxe <path>" instead.\n
EXEL084=Unable to make a backup copy of file\: %s
EXEL083=Could not open file\: %s
EXEL082=\  -Xlp<x>         set the large page size to <x>
SHRC109=\!STALE\!
EXEL081=java version "%1$s/%2$s"
SHRC108=\t%.*s
EXEL080=java version "%s"
SHRC469=Failed to store 1$s attached data for %8$.*7$s.%4$.*3$s%6$.*5$s, reason\:%2$s
SHRC107=\t%.*s
SHRC468=Stored %1$s attached data for %7$.*6$s.%3$.*2$s%5$.*4$s
SHRC106=%1$d\: 0x%2$p TOKEN
SHRC467=Failed to find %1$s attached data for %8$.*7$s.%4$.*3$s.%6$.*5$s, reason\:%2$s
SHRC105=%1$d\: 0x%2$p URL
SHRC466=Found %1$s attached data for %7$.*6$s.%3$.*2$s%5$.*4$s
SHRC104=%1$d\: 0x%2$p CLASSPATH
SHRC465=[-Xshareclasses JIT data verbose output enabled]
SHRC103=\tToken 0x%p
SHRC464=Enable JIT data verbose output
SHRC102=\tURL 0x%p
SHRC463=-Xscmaxjitdata value is greater than -Xscmx value, so it has been set to unlimited
SHRC101=\tIndex %1$d in classpath 0x%2$p
SHRC462=-Xscminjitdata value is greater than -Xscmx value, so it has been set to equal -Xscmx value
SHRC100=%1$d\: 0x%2$p ROMCLASS\: %4$.*3$s at 0x%5$p.
SHRC461=-Xscminjitdata value should not be greater than -Xscmaxjitdata value
SHRC460=Disable storing of JIT data in the shared cache
EXEL079=\  -Xscmx<x>       set size of new shared class cache to <x>
EXEL078=\  -Xshareclasses[\:options]  Enable class data sharing (use help for details)\n
EXEL077=\  -Xssi<x>        set java thread stack increment to <x>
EXEL076=JIT  - %s\n
EXEL075=\  -Xquickstart    improve startup time by delaying optimizations
EXEL074=Unable to redirect console to\: %1$s\:%2$d
EXEL073=Internal VM error\: Failed to create Java VM
EXEL072=VM startup error\: Out of memory
EXEL071=Failed to find main class name
EXEL070=ROM image is wrong version
SHRC459=Disables class sharing and utility APIs
SHRC458=Disables class sharing without disabling utility APIs
SHRC457=Invalid cache name, the cache name "%.*s" contains only whitespace or is empty
SHRC456=Force discovery of a change to the VM build id
SHRC455=Force verification of the string table on startup
SHRC454=Disable checking if the current SysV semaphore id is the same as the cached SysV semaphore id
SHRC453=List all elements in cache, including orphan classes
SHRC452=Disable memory protection of the read/write area (string table)
SHRC451=Data start field in cache header is not valid. Data start address in cache header is\: 0x%p.
SHRC450=Data length field in cache header is not valid. Data length in cache header is \: %u.
EXEL069=Failed to find ROM image
EXEL068=Internal VM error\: Failed to set array element for %s
EXEL067=Internal VM error\: Failed to create java/lang/String for argument %s
EXEL066=Internal VM error\: Failed to create byte array for argument %s
EXEL065=Internal VM error\: Failed to create argument array
EXEL064=The method main must be declared public, static and void.
EXEL063=Class %s does not implement main()
EXEL062=Internal VM error\: Out of memory converting string to UTF characters for class name %s
EXEL061=Internal VM error\: Failed to create java/lang/String for class name %s
EXEL060=Internal VM error\: Failed to create byte array for class name %s
SHRC449=Padding is non zero. Padding bytes in cache header are\: %u.
SHRC448=Cache size field in cache header is not valid. Cache size in cache header is\: 0x%x.
SHRC447=Cache header eyecatcher is not valid. Address of eyecatcher string in cache header\: 0x%p.
SHRC446=Failed to acquire header write lock during cache startup with error code\: %d.
SHRC445=Size of cache is too small to be useful. Invalid cache size\: 0x%x.
SHRC444=Read corrupt data for cache entry header 0x%p (invalid item length)
SHRC443=Cache CRC is incorrect indicating a corrupt cache. Incorrect cache CRC\: 0x%x.
SHRC442=Shared cache "%s" is corrupt. Corruption code is %d. Corrupt value is 0x%p. No new JVMs will be allowed to connect to the cache.\n \tExisting JVMs can continue to function, but cannot update the cache.
SHRC441=-XscmaxJIT value is greater than -Xscmx value, so it has been set to unlimited
SHRC440=-XscminJIT value is greater than -Xscmx value, so it has been set to equal -Xscmx value
EXEL059=Internal VM error\: Failed to find class java/lang/String
EXEL058=Internal VM error\: Out of memory
EXEL056=IBM is a registered trademark of IBM Corp.\nJava and all Java-based marks and logos are trademarks or registered\ntrademarks of Sun Microsystems, Inc.\n
EXEL055=Target\: %s
EXEL054=(c) Copyright IBM Corp. 1991, %s  All Rights Reserved
EXEL053=Licensed Materials - Property of IBM\n\nJ9 - VM for the Java(TM) platform, Version %s
EXEL052=\nWARNING\: The command line argument "%s" has been deprecated.\nWARNING\: Use the -X equivalent.
EXEL051=\nWARNING\: The command line argument "%s" has been deprecated.\nWARNING\: Use "-classpath <path>" or "-cp <path>".
EXEL050=\  -Xrdbginfo\:<host>\:<port>      enable remote debug information server
SHRC439=-XscminJIT value should not be greater than -XscmaxJIT value
SHRC438=Disable storing of JIT data in the shared cache
SHRC799=The maximum allowed JIT data space should not be greater than the softmx limit %d set on shared cache usage.
SHRC437=Error releasing shared class cache file header read lock
SHRC798=The maximum allowed AOT space should not be greater than the softmx limit %d set on shared cache usage.
SHRC436=Error acquiring shared class cache file header write lock
SHRC797=The minimum reserved JIT data space should not be greater than the softmx limit %d set on shared cache usage.
SHRC435=-Xitsn%2$u uses %1$u bytes of memory, which is larger than the shared classes cache size of %3$u bytes
SHRC796=The minimum reserved AOT space should not be greater than the softmx limit %d set on shared cache usage.
SHRC434=Value\=%d passed by -Xitsn option is outside of the range of prime number values supported by the VM. Supported range \= 0 - %u
SHRC795=The sum of minimum reserved AOT bytes %d and minumum reserved JIT data bytes %d should not be greater than the softmx bytes %d.
SHRC433=\tfor ROMClass %2$.*1$s at 0x%3$p.
SHRC794=Adjust the maximum shared classes cache space allowed for JIT data to <size>.
SHRC432=\ Signature\: %2$.*1$s Address\: 0x%3$p
J9CL040=Unable to allocate memory for new JNI global reference
SHRC793=Adjust the minimum shared classes cache space reserved for JIT data to <size>.
SHRC431=%1$d\: 0x%2$p JITPROFILE\: %4$.*3$s
SHRC792=Adjust the maximum shared classes cache space allowed for AOT data to <size>.
SHRC430=Failed to remove current generation of shared class cache "%s"
SHRC791=Adjust the minimum shared classes cache space reserved for AOT data to <size>.
SHRC790=Adjust the softmx size in the cache to <size>.
EXEL049=\  -Xdbginfo\:<symbol file path>  enable debug info server
EXEL048=\  -Xrunjdwp\:<options>           enable debug, JDWP standard options
EXEL047=\n  -Xdbg\:<options>               enable debug, JDWP standard options
EXEL046=\  -Xlp                          enable large page support
EXEL045=\  -Xnocompactgc                 disable compaction
EXEL044=\  -Xcompactgc                   enable compaction
EXEL043=\  -Xcompactexplicitgc           enable compaction on every system GC
EXEL042=\  -Xnocompactexplicitgc         disable compaction on a system GC
J9CL039=Timestamp is invalid when retrieving JVM CPU usage info.
EXEL041=\  -Xalwaysclassgc               enable dynamic class unloading on every GC
J9CL038=Error retrieving JVM CPU usage information.
EXEL040=\  -Xclassgc                     enable dynamic class unloading
SHRC429=Failed to remove older generation of shared class cache "%s"
J9CL037=Cannot retrieve JVM CPU usage information when -XX\:-EnableCPUMonitor has been specified.
SHRC428=Removed older generation of shared class cache "%s"
J9CL036=loading constraint violation\: %2$.*1$s not visible from %4$.*3$s
SHRC789=The softmx bytes is set to %u.
SHRC427=Modifier used to print detailed cache statistics
J9CL035=Private interface methods require invokespecial
SHRC788=The maximum allowed JIT data bytes is set to %d.
SHRC426=\# JCL Entries                       %*c\= %d
J9CL034=%1$d\: Failed retrieving %2$s Info. %3$s
SHRC787=The minimum reserved JIT data bytes is set to %d.
SHRC425=\# Java Objects                      %*c\= %d
J9CL033=Could not register %s as bootstrap library. Error code \= %zu
SHRC786=The maximum allowed AOT bytes is set to %d.
SHRC424=\# JIT Profiles                      %*c\= %d
J9CL032=%1$d\: Failed to retrieve %2$s Info.
SHRC785=The minimum reserved AOT bytes is set to %d.
SHRC423=\# JIT Hints                         %*c\= %d
J9CL031=Could not register dbgwrapper.dll as bootstrap library. Error code \= %zu
SHRC784=Cannot set the minimum reserved AOT and/or JIT data space as requested. The softmx limit set on shared cache usage, or total cache size is not big enough.
SHRC422=\# AOT Thunks                        %*c\= %d
J9CL030=Unable to allocate memory for tenant native data
SHRC783=The maximum allowed JIT data space should not be greater than the softmx limit of %u bytes set on shared cache usage.
SHRC421=\# AOT Class Hierarchy               %*c\= %d
SHRC782=The size of maximum JIT data space should not be smaller than the JIT bytes (%d) that is already stored in the cache.
SHRC420=\# AOT Data Entries                  %*c\= %d
SHRC781=The maximum allowed AOT space should not be greater than the softmx limit of %u bytes set on shared cache usage.
SHRC780=The size of maximum AOT space should not be smaller than the AOT bytes (%d) that is already stored in the cache.
EXEL039=\  -Xnoclassgc                   disable dynamic class unloading
EXEL038=\  -Xgcthreads<x>                set number of GC threads
EXEL037=\nArguments to the following options are expressed as decimal numbers.\n
EXEL036=\  -Xmaxf<x>       maximum percentage of heap free after GC
EXEL035=\  -Xminf<x>       minimum percentage of heap free after GC
EXEL034=A value of 0.3 represents a request of 30%%\n
EXEL033=\nArguments to the following options are expressed as a decimal from 0 to 1.
EXEL032=\  -Xmaxe<x>       set maximum size for heap expansion to <x>
J9CL029=malformed/unmappable characters found
EXEL031=\  -Xmine<x>       set minimum size for heap expansion to <x>
J9CL028=Internal error while reading zip file, Error Code %d
EXEL030=\  -Xss<x>         set thread stack size to <x>
SHRC419=Class LocalVariableTable bytes      %*c\= %u
J9CL027=Zip file read error
SHRC418=Byte data bytes                     %*c\= %d
J9CL026=Unable to allocate memory for HTTP post content
SHRC779=The minimum reserved JIT data space should not be greater than the maximum allowed JIT data space.
SHRC417=JCL data bytes                      %*c\= %d
J9CL025=Unable to allocate memory for HTTP response headers
SHRC778=The minimum reserved AOT space should not be greater than the maximum allowed AOT space.
SHRC416=ReadWrite bytes                     %*c\= %d
J9CL024=Out of memory
SHRC777=The softmx limit for shared cache usage is smaller than the minimum feasible value %u bytes.
SHRC415=Java Object bytes                   %*c\= %d
J9CL023=Not enough memory available to read record
SHRC776=The softmx limit for shared cache usage is smaller than the number of bytes %u in shared cache already in use.
SHRC414=JIT profile bytes                   %*c\= %d
J9CL022=Not enough memory to list record stores
SHRC775=The softmx limit set for shared cache usage is greater than the total cache size %u bytes. It will be set equal to the total cache size.
SHRC413=JIT hint bytes                      %*c\= %d
J9CL021=Not enough memory to create index list
SHRC774=The space for JIT data in shared cache "%s" is full.
SHRC412=AOT thunk bytes                     %*c\= %d
J9CL020=Not enough memory to read locale data
SHRC773=The space for AOT data in shared cache "%s" is full.
SHRC411=AOT class hierarchy bytes           %*c\= %d
SHRC772=The softmx limit for shared cache "%s" usage is reached. Use option "%s" to increase the softmx limit.
SHRC410=AOT data bytes                      %*c\= %d
SHRC771=Enable memory protection of partially filled pages. On z/OS it is equivalent to 'partialpagesonstartup'.
SHRC770=The JVM has disabled protecting partially filled pages. If '-Xshareclasses\:mprotect\=onfind' is specified, it is also ignored.
EXEL029=\  -Xss<x>         set maximum java thread stack size to <x>
EXEL028=\  -Xiss<x>        set initial java thread stack size to <x>
EXEL027=\  -Xmso<x>        set OS thread stack size to <x>
EXEL026=\  -Xmrx<x>        set maximum size of remembered set to <x>
EXEL025=\  -Xmr<x>         set remembered set size to <x>
EXEL024=\  -Xmx<x>         set memory maximum to <x>
EXEL023=\  -Xms<x>         set initial memory size to <x>
EXEL022=\  -Xms<x>         set old space size to <x>
J9CL019=Cannot allocate SIOCGIFCONF buffer
EXEL021=\  -Xmoi<x>        set old space increment to <x>
J9CL018=unable to allocate for timezone entry
EXEL020=\  -Xmox<x>        set maximum old space size to <x>
SHRC409=AOT code bytes                      %*c\= %d
J9CL017=unable to allocate for timezone resource
SHRC408=cache generation                    %*.c\= %d\n
J9CL016=unable to create new class path entry
SHRC769=The JVM has enabled shared cache partial page protection as the existing shared cache was created with partial page protection enabled.
SHRC407=runtime flags                       %*.c\= 0x%.16llX
J9CL015=Failed to create stack trace (most likely due to lack of OS memory)
SHRC768=Memory page protection on runtime data is successfully enabled
SHRC406=metadata start address              %*c\= 0x%p
J9CL014=Invalid JCL Command line argument
SHRC767=Memory page protection on runtime data and string read-write data is successfully enabled
SHRC405=Failed to create a directory for the cache
J9CL013=Failed to allocate OS monitor
SHRC766=Memory page protection on runtime data and partially filled pages is successfully enabled
SHRC404=Failed to get a directory for the cache
SHRC765=Memory page protection on runtime data, string read-write data and partially filled pages is successfully enabled
SHRC403=Class debug area used bytes         %*c\= %u
J9CL011=Failed to fork OS thread
SHRC764=Unable to create shared memory of size %1$d bytes as requested \n \tAdjusted to maximum shared memory permitted (%2$d bytes) \n \t(To increase available shared memory, modify system SHMMAX value) \n \t If -Xscdmx is used, the debug attribute area is adjusted in proportion \n \t according to its original ratio to the -Xscmx value.
SHRC402=JIT data bytes                      %*c\= %d
J9CL010=Failed to allocate JNIEnv
SHRC763=All shared classes sub-options in total should not be longer than %u chars.
SHRC401=\# Zip caches                        %*c\= %d
SHRC762=Error getting stats of the shared class cache file when verifying its group access permission.
SHRC400=Zip cache bytes                     %*c\= %d
SHRC761=Failed to set group access permission as requested by the 'groupAccess' sub-option on the shared cache snapshot file.
SHRC760=Failed to set group access permission as requested by the 'groupAccess' sub-option on the shared memory control file associated with shared class cache.
EXEL019=\  -Xmos<x>        set initial old space size to <x>
EXEL018=\  -Xmo<x>         set initial/maximum old space size to <x>
EXEL017=\  -Xmo<x>         set old space size to <x>
EXEL016=\  -Xmnx<x>        set maximum new space size to <x>
EXEL015=\  -Xmns<x>        set initial new space size to <x>
EXEL014=\  -Xmn<x>         set initial/maximum new space size to <x>
EXEL013=\  -Xmn<x>         set new space size to <x>
EXEL012=\  -Xmco<x>        set ROM class segment increment to <x>
J9CL009=Thread already started
EXEL011=\  -Xmca<x>        set RAM class segment increment to <x>
J9CL008=nanosecond timeout value out of range
EXEL010=Values suffixed with "k" (kilo) or "m" (mega) will be factored accordingly.\n
J9CL007=timeout value is negative
J9CL006=No pre-verify data for java/lang/Object
SHRC759=Failed to set group access permission as requested by the 'groupAccess' sub-option on the semaphore control file associated with shared class cache.
J9CL005=Incompatible class library version\: requires VM v%1$i, found v%2$i
SHRC758=Failed to set group access permission as requested by the 'groupAccess' sub-option on the shared memory with shmid\=%d associated with shared class cache.
J9CL004=Incompatible class library version\: expected JCL v%1$i, found v%2$i
SHRC757=Failed to set group access permission as requested by the 'groupAccess' sub-option on the semaphore set with semid\=%d associated with shared class cache.
J9CL003=Incompatible class library version\: JCL %1$x, VM %2$x
SHRC756=Failed to set group access permission on the shared cache file as requested by the 'groupAccess' sub-option.
J9CL002=Classes are from a non-J9 library, or an incorrectly reduced JXE
SHRC755=\t invalidatedaot\tPrints only invalidated aot types in the shared cache. 
J9CL001=Try running with -jcl\:%s
SHRC754=Recreation of shared memory control file is not allowed.
J9CL000=Incompatible class library
SHRC753=Failed to get the cache write mutex
SHRC752=Failed to parse the method specification(s)
SHRC751=Failed to parse the method specifications. No more than %d method specifications are allowed.
SHRC750=No AOT methods match the method specification(s)
EXEL009=\nArguments to the following options are expressed in bytes.
EXEL008=\  -Xfuture        enable strictest checks, anticipating future default
EXEL007=\  -Xnoaot         do not run precompiled code
EXEL006=\  -Xnojit         disable the JIT
EXEL005=\  -Xint           run interpreted only (equivalent to -Xnojit -Xnoaot)
EXEL004=\n  -Xrun<library>[\:options]  load native agent library\n                            (deprecated in favor of -agentlib)\n
EXEL003=\  -Xbootclasspath/a\:<path>  append <path> to bootstrap classpath
EXEL002=\  -Xbootclasspath/p\:<path>  prepend <path> to bootstrap classpath
EXEL001=\  -Xbootclasspath\:<path>    set bootstrap classpath to <path>
EXEL000=The following options are non-standard and subject to change without notice.\n
SHRC749=Failed to find the AOT method(s)
SHRC748=Failed to revalidate the AOT method(s)
SHRC747=Failed to invalidate the AOT method(s)
SHRC746=Found the %d AOT method(s)
SHRC745=Revalidated the %d AOT method(s)
SHRC744=Invalidated the %d AOT method(s)
SHRC743=Invalid method specification(s) for option "%s"
SHRC742=IMPORTANT\: You can pass in multiple method specifications separated by commas. Where an option value contains comma(s), it must be enclosed in curly braces. \n\tYou may need to enclose options in quotation marks to prevent the shell intercepting and fragmenting comma-separated command lines, e.g.\: \n\n\t"-Xshareclasses\:name\=Cache1,%s{java/util/*.*(),java/lang/Object.*(*)}" or\n\t-Xshareclasses\:name\=Cache1,%s'{java/util/*.*(),\!java/util/*.*()}'\n
SHRC741=The format of <method_specification> is [\!]{*|[*]<packagename/classname>[*]}[.{*|[*]<methodname>[*]}][({*|[*]<parameters>[*]})], e.g.\:\n\n\t-Xshareclasses\:name\=Cache1,%sjava/util/HashMap.hash(Ljava/lang/Object;)\n
SHRC740=Usage\: %s{<method_specification>[,<method_specification>]}
SHRC739=INVALIDATED
SHRC738=Print the AOT method(s) matching the method specification(s).\n\t<method_specification> is defined as\: [\!]{*|[*]<packagename/classname>[*]}[.{*|[*]<methodname>[*]}][({*|[*]<parameters>[*]})].
SHRC737=Revalidate the AOT method(s) matching the method specification(s).
SHRC736=Invalidate the AOT method(s) matching the method specification(s).
SHRC735=Use a %d-bit JVM to perform the requested operation on the %d-bit shared cache "%s" as the %d-bit JVM cannot verify that the shared memory was created by the JVM
SHRC734=Print the name of the shared class snapshot file that will be used.
SHRC733=The JVM cannot store classpaths into the shared cache, since the cache was created with the '-Xshareclasses\:restrictClasspaths' option
SHRC732=The JVM can store classpaths into the shared cache created with '-Xshareclasses\:restrictClasspaths' option
SHRC731=The JVM has ignored '-Xshareclasses\:restrictClasspaths' option as the existing shared cache was created without '-Xshareclasses\:restrictClasspaths' option
SHRC730=The JVM has created shared cache with '-Xshareclasses\:restrictClasspaths' option. Subsequent JVM invocations will not be able to store classpaths into the shared cache
SHRC729=The snapshot was created by a different JVM build and doesn't match the running JVM
SHRC728=Failed to read the non-persistent shared cache snapshot file "%s"
SHRC727=An error has occurred in creating the new non-persistent shared cache
SHRC726=Non-persistent shared cache "%s" already exists. It cannot be restored from the snapshot.
SHRC725=The length of the non-persistent shared cache snapshot file "%s" is invalid. The length of the file is %lld bytes. A valid snapshot file is at least %d bytes and at most %lld bytes.
SHRC724=Shared cache snapshot file "%s" does not exist
SHRC723=The JVM could not check the permissions of the shared cache snapshot file "%s"
SHRC722=The JVM does not permit access to the shared cache snapshot file "%s" because the JVM process's user ID and group ID are different from the shared cache snapshot file owner's user ID and group ID, and the JVM process's user ID does not belong to the shared cache snapshot file owner's group.
SHRC721=The JVM is not configured to access the non-persistent shared cache snapshot file "%s". To open the file, use 'groupAccess' sub-option.
SHRC720=Recreation of shared memory control file is not allowed when creating a snapshot of the cache
SHRC719=Shared cache snapshot "%s" is destroyed
SHRC718=Shared cache snapshot does not exist
SHRC717=Failed to remove current generation of shared cache snapshot "%s"
SHRC716=Failed to remove older generation of shared cache snapshot "%s"
SHRC715=Removed older generation of shared cache snapshot "%s"
SHRC714=No shared cache snapshots available
SHRC713=Failed to get the length of the shared cache snapshot file "%s"
SHRC712=Attempting to destroy all shared cache snapshots in cacheDir "%s"
SHRC711=Failed to reposition the offset of the file descriptor in the non-persistent shared cache snapshot file "%s"
SHRC710=Failed to write into the non-persistent shared cache snapshot file "%s"
SHRC709=The JVM is creating a snapshot of the non-persistent shared cache "%s", but a snapshot file "%s" already exists and it will be overwritten
SHRC708=Failed to truncate the existing non-persistent shared cache snapshot file "%s"
SHRC707=Failed to acquire the mutex of cache "%s"
SHRC706=Failed to acquire file lock on the shared cache snapshot file
SHRC705=Platform error message\: %1$s
SHRC704=Port layer error code \= %1$d
SHRC703=Failed to open the shared cache snapshot file "%s"
SHRC702=Failed to get a directory for the shared cache snapshot
SHRC701=Failed to create a snapshot of non-persistent shared cache "%s"
SHRC700=Snapshot of non-persistent shared cache "%s" has been created
PCKD091=@Unpacked annotation on field %2$.*1$s in class %4$.*3$s is invalid\: @Unpacked field must not be declared static
PCKD090=Annotations on field %2$.*1$s in class %4$.*3$s are invalid\: @Length annotation and @Unpacked annotation cannot be used together
PCKD089=@Unpacked annotation on field %2$.*1$s in class %4$.*3$s is invalid\: Declaring class is not @Packed
PCKD088=@Unpacked annotation on field %2$.*1$s in class %4$.*3$s is invalid\: The type of an @Unpacked field must be a @Packed class
PCKD087=Packed object support is a new IBM enhancement for Java that is provided as a\ntechnology preview. The content is available subject to a disclaimer.\n\nDisclaimer\nThe code and application programming interfaces herein are technology preview\ninformation that may not be made generally available by IBM as or in a product.\nYou are permitted to use the information only for internal use for evaluation\npurposes and not for use in a production environment. IBM provides the\ninformation without obligation of support and "as is" without warranty of any\nkind.\n\nInformation regarding potential future products is intended to outline our general\nproduct direction and it should not be relied on in making a purchasing decision.\nThe information mentioned regarding potential future products is not a\ncommitment, promise, or legal obligation to deliver any material, code or\nfunctionality. Information about potential future products may not be incorporated\ninto any contract. The development, release, and timing of any future features or\nfunctionality described for our products remains at our sole discretion.\n
PCKD086=@Packed array class "%.*s" cannot have a @Packed array member class.
PCKD085=Unexpected method implementation found in @Packed array class "%.*s"
PCKD084=@Packed array class "%.*s" cannot have any fields.
PCKD083=@Packed array class "%.*s" must implement java/io/Serializable.
PCKD082=@Packed array class "%.*s" must implement java/lang/Cloneable.
PCKD081=@Packed array class "%.*s" is missing clone() method.
PCKD080=@Packed array class "%.*s" is missing getLength() method.
PCKD079=@Packed array class "%.*s" is missing at() method.
IREL000=AOT code from %1$s.jar generated by version %2$s of the JVM is not compatible with the current version %3$s of the JVM.
PCKD078=@Packed array class "%.*s" is missing allocate() method.
PCKD077=@Packed array class "%.*s" is missing a private constructor.
PCKD076=Incorrect signature for clone() method of @Packed array class "%.*s".
PCKD075=Incorrect signature for getLength() method of @Packed array class "%.*s".
PCKD074=Incorrect signature for at() method of @Packed array class "%.*s".
PCKD073=Incorrect signature for allocate() method of @Packed array class "%.*s".
PCKD072=@Packed array class "%.*s" cannot have more than one constructor.
PCKD071=The constructor of @Packed array class "%.*s" must not require any arguments.
PCKD070=The constructor of @Packed array class "%.*s" must be private.
PCKD069=@Packed array class "%.*s" must directly extend PackedObject.
PCKD068=@Packed array class "%.*s" must be public.
PCKD067=@Packed array class "%.*s" must be final.
PCKD066=The requested array length %1$lld (0x%2$llx) is too large.
PCKD065=The requested array length is too large.
PCKD064=Unable to get capacity of direct ByteBuffer.
PCKD063=Unable to get address of direct ByteBuffer.
PCKD062=Final @Packed class %.*s must not be empty.
PCKD061=Final @Packed class must not be empty.
PCKD060=@Length annotation on %2$.*1$s in %4$.*3$s is invalid\: @Length value must not be zero
PORT048=Failed to create system dump because a non-regular file "%s" exists with the same name as the expected system dump file
PORT047=Insufficient buffer memory while attempting to load a shared library
PORT046=The executable could not be opened
PORT045=Failed to allocate memory while retrieving system info.
PORT044=Failed to allocate memory while retrieving hypervisor info.
PORT043=%1$d\: Failed retrieving %2$s Info.
PORT042=Unable to read /proc/sysinfo
PORT041=HYPFS not mounted
PORT040=HYPFS read failed
PCKD059=The class is abstract.
PCKD058=Error in nested field "%2$.*1$s" in class %4$.*3$s. The field's type must be a final packed array class.
PCKD057=The class of a nested field must be a packed array class.
PCKD056=Error in nested field "%2$.*1$s" in class %4$.*3$s. The field's class must be final and @Packed.
PCKD055=The class of a nested field must be final and @Packed.
PCKD054=The element class of a packed array class must be final and @Packed.
PCKD053=The element class of packed array class %.*s must be final and @Packed.
PCKD052=Class %2$.*1$s, subclass of %4$.*3$s, must be @Packed because it extends PackedObject.
PCKD051=Superclass %2$.*1$s of @Packed class %4$.*3$s is invalid. A @Packed class must extend PackedObject or an abstract @Packed class.
PCKD050=Superclass %2$.*1$s of @Packed class %4$.*3$s must be abstract.
PORT039=HYPFS update failed
PORT038=Malformed value for IBM_JAVA_HYPERVISOR_SETTINGS
PORT037=Not running on a Hypervisor.
PORT036=Unexpected return code from CSRSI service on z/OS
PORT035=__malloc31 failed to allocate buffer on z/OS
PORT034=Attempted to attach shared memory created in storage protection key %lu, but currently running in key %lu.
PORT033=Failed to detect a Supported Hypervisor.
PORT032=Hypervisor related operation failed.
PORT031=The LE condition %s%i, which corresponds to a software-raised POSIX signal, was received
PORT030=%s setting "%s" specifies that the core dump is to be piped to an external program.  Attempting to rename either core or core.%d.\n
PCKD049=The superclass of a @Packed class must be abstract.
PCKD048=@Packed class %.*s has no superclass.
PCKD047=@Packed class has no superclass.
PCKD046=@Packed class must be declared abstract or final.
PCKD045=@Packed class %.*s must be declared abstract or final.
PCKD044=A packed array class is required for this operation.
PCKD043=Class com.ibm.jvm.packed.PackedObject must be abstract and not @Packed.
PCKD041=Cast type is larger than the original object.
PCKD040=Array lengths are different.  
PORT029=Invalid handle. file handle\: %1$d.
PORT028=mmap failed due to invalid mapping options.
PORT027=mmap failed due to invalid memory protection parameter.
PORT026=File specified is a directory
PORT025=Invalid lock type for file lock operation. lockFlags\: %1$d
PORT024=IEATDUMP failed because we couldn't allocate the dump dataset (check disk space and field permissions).
PORT023=IEATDUMP failed because user-specified dump template was too long. Retrying dump with default template.
PORT022=Appending .X&DS to user-specified dump template to enable multi-part dumps.
PORT021=You have opened a stale System V shared semaphore\: file\:%1$s semid\:%2$d
PORT020=You have opened a stale System V shared memory\: file\:%1$s shmid\:%2$d
PCKD039=@Length annotation on %2$.*1$s in %4$.*3$s is invalid\: field must not be declared static
PCKD038=Missing @Length annotation on %2$.*1$s in %4$.*3$s
PCKD037=cannot create multi-dimensional @Packed array
PCKD036=@Packed class cannot have instance synchronized methods.
PCKD035=@Packed class %2$.*1$s cannot have instance synchronized method %4$.*3$s
PCKD034=@Packed class cannot have final nested packed fields.
PCKD033=@Packed class %2$.*1$s cannot have final nested packed field %4$.*3$s
PCKD032=@Packed class cannot have transient fields.
PCKD031=@Packed class %2$.*1$s cannot have transient field %4$.*3$s
PCKD030=@Packed class cannot have volatile fields.
PORT019=Unable to create directory %s.  Shared classes will be disabled until this directory is created.
PORT018=Operation Failed\: %1$d (%2$s failed\: %3$d)
PORT017=Operation Failed\: %d
PORT016=Internal Error %i
PORT015=Unable to resolve shared library references - a prerequisite shared library may be missing
PORT014=Failed to load dll as it was not found
PORT013=Error loading shared library - the dll table could not be found
PORT012=Error loading shared library due to the PACE bit being set
PORT011=Unable to allocated memory while attempting to load a shared library
PORT010=Permission to load the shared library was not granted
CDRT002=Failing PC\: %1$p (offset %2$p), metaData \= %3$p
CDRT001=Method\: %2$.*1$s.%4$.*3$s%6$.*5$s (%7$p)
CDRT000=Unable to locate JIT stack map - aborting VM
PCKD029=@Packed class %2$.*1$s cannot have volatile field %4$.*3$s
PCKD028=@Packed class cannot implement interface.
PCKD027=@Packed class %.*s should not implement interface.
PCKD026=@Packed class must be declared final.
PCKD025=@Packed class %.*s must be declared final.
PCKD024=@Length annotation on %2$.*1$s in %4$.*3$s is invalid\: @Length value must be positive
PCKD023=This function cannot operate on mixed @Packed objects.
PCKD022=@Length annotation on %2$.*1$s in %4$.*3$s is invalid\: field type must be @Packed
PCKD021=@Length annotation on %2$.*1$s in %4$.*3$s is invalid\: field type must be packed array
PCKD020=@Length annotation on %2$.*1$s in %4$.*3$s is invalid\: declaring class is not @Packed
PORT009=The specified shared library was not found
PORT008=The module is not the correct architecture
PORT007=The specified module is not a module
PORT006=The format of the module is not correct
PORT005=Could not load the shared library 
PORT004=Symbol resolution failure
PORT003=Dependent module %s could not be loaded
PORT002=Unknown error loading shared library
PORT001=Failed to allocate memory while attempting to write to a file.
PCKD019=Non @Packed class %.*s was previously registered as a @Packed class.
PCKD018=@Packed class %.*s was previously registered as a non @Packed class.
PCKD017=Cannot store into an array of @Packed type.
PCKD016=Cannot assign to a nested field of a @Packed type.
PCKD015=A @Packed class must extend PackedObject or an abstract @Packed class.
PCKD014=Subclasses of com.ibm.jvm.packed.PackedObject must be @Packed.
PCKD013=com.ibm.jvm.packed.PackedObject cannot be loaded by a non-system classloader.
PCKD012=This operation is not valid on @Packed objects.
PCKD011=Cannot copy between objects of different @Packed types.
PCKD009=%2$.*1$s from @ImportPacked annotation in %4$.*3$s was previously registered as non @Packed class. 
PCKD008=Class does not match a previous @ImportPacked annotation.
PCKD007=Cannot create an object via this API if the object's class is a mixed @Packed type
J2JX110=The JAR file %s has already been converted
PCKD004=Not a @Packed array object
PCKD003=A @Packed array class is not valid for this operation.
PCKD002=Not a native @Packed object
PCKD001=Not a @Packed object
PCKD000=Not a @Packed class
SHRC099=%1$d\: 0x%2$p ORPHAN\: %4$.*3$s at 0x%5$p.
SHRC098=\nCurrent statistics for cache "%s"\: \n
SHRC097=Shared cache "%s" is corrupt. No new JVMs will be allowed to connect to the cache.\n \tExisting JVMs can continue to function, but cannot update the cache.
SHRC096=Shared cache "%s" is full. Use -Xscmx to set cache size.
SHRC095=Attempts to call markStale on shared cache items have failed
SHRC094=Orphan found but local ROMClass passed to addROMClassToCache
SHRC093=Detected unexpected termination of another JVM during update
SHRC092=ADD failure when reading cache
J2JX109=\  -E xxx\=yyy                set system property xxx to value of environment variable yyy at runtime
SHRC091=Read corrupt data for item 0x%p (invalid dataType)
J2JX108=\  -g[\:lines,source,vars]    generate a subset (lines, source, and/or vars) of debugging information inside of JXE
SHRC090=Failed to get cache mutex in SH_CacheMap startup
J2JX107=\  -g\:nosym                  embed debugging information inside JXE
J2JX106=\  -g\:sym                    generate a .sym file for debugging, no debugging information inside of JXE
J2JX105=\  -nog                      generate no debugging information for JXE
J2JX104=\  -g                        same as -g\:sym
J2JX103=Could not compile method\: %2$.*1$s/%4$.*3$s%6$.*5$s jitErr 0%7$x
J2JX102=Could not compile native method\: %2$.*1$s/%4$.*3$s%6$.*5$s
J2JX101=Could not compile abstract method\: %2$.*1$s/%4$.*3$s%6$.*5$s
J2JX100=%s is not supported in this configuration
SHRC089=Cannot create refresh mutex in SH_CacheMap
SHRC088=Failed to create cache as ROMImageSegment in SH_CacheMap
SHRC087=MarkStale failed during ClasspathManager\:\:update()
SHRC086=Cannot enter ClasspathManager hashtable mutex
SHRC085=Cannot allocate memory for linked list item header
SHRC084=Cannot allocate memory for linked list item
SHRC083=Cannot allocate memory for identifiedClasspaths array in SH_ClasspathManagerImpl2
SHRC082=Cannot create identifiedMutex in SH_ClasspathManagerImpl2
SHRC081=Cannot create cpeTableMutex in SH_ClasspathManagerImpl2
SHRC080=Cannot allocate memory for hashtable entry
SHRC079=Cannot create hashtable in SH_ClasspathManagerImpl2
SHRC078=Failed to create linkedListHdr pool in SH_ClasspathManagerImpl2
SHRC077=Failed to create linkedListImpl pool in SH_ClasspathManagerImpl2
SHRC076=Finding class %1$s in shared cache for class-loader id %2$d...
SHRC075=\ Failed.
SHRC074=\ Succeeded.
SHRC073=Storing class %2$.*1$s in shared cache for class-loader id %3$d with URL %5$.*4$s (index %6$d)...
VIRT001=Unable to initialize the Hypervisor.
SHRC072=Command-line option "%s" unrecognised
VIRT000=Virtualization feature requested.
SHRC071=Command-line option "%s" requires sub-option
SHRC070=Incremental updates disabled
SHRC069=Concurrent store contention reduction disabled
SHRC068=Local caching of classpaths disabled
SHRC067=Timestamp checking disabled
SHRC066=Locking of local hashtables disabled
SHRC065=Cannot allocate pool in shrinit
SHRC064=Failed to create configMonitor in shrinit
SHRC063=Cannot allocate memory for sharedClassConfig in shrinit
SHRC062=Error copying username into default cache name
SHRC061=Cache name should not be longer than 64 chars. Cache not created.
SHRC060=Cannot allocate memory for string buffer in shrinit\:\:hookFindSharedClass
JDTS000=Listening for transport dt_socket at address\: %d
OFFC031=Offload\:Local natives properties file has invalid format {%s}.
OFFC030=Offload\:Could not find local natives properties file {%s}.
SHRC059=Cannot allocate memory for ClasspathItem in shrinit\:\:hookFindSharedClass
SHRC058=Cannot allocate memory for ClasspathItem in shrinit\:\:hookStoreSharedClass
SHRC057=Wrong parameters for expire option
SHRC056=Command-line option "%s" unrecognised
SHRC055=Disable incremental cache updates
SHRC054=Disable algorithm to reduce store contention
SHRC053=Disable local hashtable locking
SHRC052=Disable local classpath caching
SHRC051=Switch off dynamic updates
OFFC029=Offload\:Failed to create offload manager.
SHRC050=Enable verbose output
OFFC028=Offload\:Failed to start local quarantine controller.
OFFC027=Offload\:Connection information missing for remote isolation.
OFFC026=Offload\:Invalid connection information for remote isolation.
OFFC025=Offload\:Failed to start quarantine controller with url\=%s.
J9VM156=-XX\:SharedCacheHardLimit\= is ignored if -Xshareclasses is not specified
OFFC024=Offload\: JNI Isolation enabled for library group {%s}.
J9VM155=Bad value for -Xpatch; patch path is not specified in the property %s\=%s
OFFC023=Offload Trace\: Tuning Fork logging to %s
J9VM154=Bad value for -Xpatch; value of the property %s is not specified
OFFC022=Offload Trace utility installed. Use -Xoffload\:trace\:help for usage
J9VM153=Switching to internal jimage reader as JVM is unable to use jimage library
OFFC021=\ttuningfork\=device  send tuningfork output to device.
J9VM152=Failed to lookup symbol %s in jimage library
OFFC020=\txml\=filename       log JNI activity to filename.
J9VM151=Failed to open jimage library
J9VM150=-Xscsoftmx is ignored if -Xshareclasses is not specified
SHRC049=Debug mode that checks all incoming bytecode
SHRC048=List all elements in cache
SHRC047=Print summary of cache statistics
SHRC046=Display all shared caches and their statistics
SHRC045=Destroy caches that have been unused for <t> mins
SHRC044=OPTION_MODIFIED_EQUALS"<modContext>"
SHRC043=Enable sharing of modifed bytecode\n \t<modContext> is user-descriptor describing type of modification\n \tJVMs using same <modContext> must use same modifications
SHRC042=Destroy all shared caches
SHRC041=Destroy shared cache (use name parm or default)
OFFC019=Usage\: -Xoffload\:trace\:[option[,option[,...]]]
SHRC040=Specify name of shared cache
OFFC018=Offload Trace utility for J9, Version %s
J9VM149=%s is no longer supported. Please add the required libraries/jar files to the classpath.
OFFC017=\thelp             print this screen
J9VM148=%s is no longer supported. The endorsed-standards override mechanism is only supported via modules.
OFFC016=\ttax\=spin|delay   set the delay strategy.
J9VM147=Cannot attach current thread
OFFC015=\toutput\=device    output to file, 'stdout', or 'stderr'
J9VM146=invokeinterface of non-public method '%4$.*3$s%6$.*5$s' in %2$.*1$s
OFFC014=\tdelay\=\#[ms|us]   apply delay of \# milli/micro seconds to each JNI call
J9VM145=%s is unsupported on z/OS.
OFFC013=Usage\: -Xoffload\:sim\:[option[,option[,...]]]
J9VM144=too many parameters\: 255 + 1
OFFC012=Offload Simulator utility for J9, Version %s
J9VM143=The command-line option %s is not supported in this version of the IBM SDK
OFFC011=Offload Simulator\: Tuning Fork failed to initialize.
J9VM142=The command-line option -Xrealtime is not supported in this version of the IBM SDK
OFFC010=Unrecognized time units -> %s
J9VM141=conflicting default methods for '%2$.*1$s%4$.*3$s' in %6$.*5$s from classes [%7$s]
J9VM140=Caller is not annotated as @sun.reflect.CallerSensitive.
SHRC039=Print general shared help
SHRC038=Usage\:\n\njava -Xshareclasses[\:option,...]\n\n Valid options included (with a brief summary) are\:\n\n
SHRC399=Data bytes                          %*c\= %d
SHRC037=Incremental updates disabled
SHRC398=\# AOT Methods                       %*c\= %d
SHRC036=Concurrent store contention reduction disabled
SHRC397=AOT bytes                           %*c\= %d
SHRC035=Local caching of classpaths disabled
SHRC396=%% Stale classes                     %*c\= %d%%\n
SHRC034=Timestamp checking disabled
SHRC395=\# Stale classes                     %*c\= %d
SHRC033=Locking of local hashtables disabled
SHRC394=\# Tokens                            %*c\= %d
SHRC032=The Shared Class Cache you are attaching has wrong modification level.
SHRC393=\# URLs                              %*c\= %d
SHRC031=The Shared Class Cache you are attaching has incompatible JVM version.
OFFC009=Offload\: Unrecoverable error, unable to hook event
SHRC392=\# Classpaths                        %*c\= %d
SHRC030=The Shared Class Cache you are attaching has an invalid header.
OFFC008=Offload Simuator\: Invalid sleep time, please choose a time >\= 1 millisecond.
J9VM139=Failed to create a thread\: retVal %1$zd, errno %2$zd (0x%3$zx), errno2 %4$zd (0x%5$zx)
SHRC391=\# ROMClasses                        %*c\= %d
OFFC007=Offload Simuator\: Clock frequency is %llu ticks/second, have_nanosleep\=%d
J9VM138=The -Xdiagnosticscollector option is not supported by this JVM.
SHRC390=Metadata %% used                     %*c\= %d%%
OFFC006=Offload Simuator\: Logging JNI calls to %s.
J9VM137=class %2$.*1$s has conflicting defaults for method %4$.*3$s%6$.*5$s
OFFC005=Offload Simuator\: Delay tax using sleep.
J9VM136=/proc/sys/kernel/core_pattern setting "%s" specifies a format string for renaming core dumps. The JVM may be unable to locate core dumps and rename them.
OFFC004=Offload Simuator\: Delay tax using spin.
J9VM135=/proc/sys/kernel/core_pattern setting "%s" specifies that core dumps are to be piped to an external program. The JVM may be unable to locate core dumps and rename them.
OFFC003=Offload Simuator\: Applying %d microsecond tax to each JNI call.
J9VM134=The system fullcore option is set to FALSE, system dumps may be truncated.
OFFC002=Offload Simuator\: Applying %d millisecond tax to each JNI call.
J9VM133=The system core size hard ulimit is set to %d, system dumps may be truncated.
OFFC001=Offload simulator utility installed. Use -Xoffload\:sim\:help for usage
J9VM132=Invalid lockword mode specified, java/lang/Class and java/lang/String cannot have lockwords when -Xtenant present\: %s
OFFC000=-Xoffload\:sim\: unrecognized option --> '%s'
J9VM131=Terminating process using CEE3AB2() with abend %1$u, reason %2$u, cleanup %3$u.
J9VM130=Application resumed execution after handling an unrecoverable condition and illegally returned to, or called back into, Java (JIT'ed code)
SHRC029=Not enough memory left on the system
SHRC028=Permission Denied
SHRC389=Metadata bytes                      %*c\= %d
SHRC027=Shared cache name is too long
SHRC388=ROMClass bytes                      %*c\= %d
SHRC026=Cannot create cache of requested size\: Please check your SHMMAX and SHMMIN settings
SHRC387=free bytes                          %*c\= %d
SHRC025=error attaching shared memory
SHRC386=cache size                          %*c\= %d
SHRC024=shared memory detach error
SHRC385=allocation pointer                  %*c\= 0x%p\n
SHRC023=Cache does not exist
SHRC384=end address                         %*c\= 0x%p
SHRC022=Error creating shared memory region
SHRC383=\nbase address                        %*c\= 0x%p
SHRC021=An unknown error code has been returned
SHRC382=Class debug area LocalVariableTable bytes %*c\= %u\n
J9VM129=Application resumed execution after handling an unrecoverable condition and illegally returned to, or called back into, Java
SHRC020=An error has occurred while opening semaphore
SHRC381=Class LineNumberTable bytes         %*c\= %u
J9VM128=Java heap space
SHRC380=Class debug area %% used             %*c\= %u%%
J9VM127=32-bit suballocator initial size can not be set to zero. 
J9VM126=32-bit suballocator commit size can not be set to zero. 
J9VM125=32-bit suballocator commit size is bigger than initial size. Commit size \= %1$u, initial size \= %2$u.
J9VM124=Cannot define class %.*s - '%.*s' is a protected system package
J9VM123=Attempting to run on a non-supported processor, JVM will terminate.
J9VM122=Failed to get user32.dll address range required for -Xprotectcontiguous.
J9VM121=-Xscmaxjitdata is ignored if -Xshareclasses is not specified
J9VM120=-Xscminjitdata is ignored if -Xshareclasses is not specified
SHRC019=request length is too small
SHRC018=cannot allocate memory
SHRC379=Class debug area size               %*c\= %u
SHRC017=Error code\: %d
SHRC378=\nRelated command line options\:\n
SHRC016=Shared Class Cache Error\:
SHRC377=-Xscdmx value of %u bytes is greater than %u bytes of available free space. A value of %u bytes will be used for -Xscdmx instead.
SHRC015=Shared Class Cache Error\: Invalid flag
SHRC376=%1$d\: 0x%2$p ZIPCACHE\: %4$.*3$s Address\: 0x%5$p Size\: %6$d
SHRC014=Shared cache "%s" semaphore remove failed
SHRC375=The cache name is to long when the user name is included. There are %d bytes left in this buffer, and your user name is %d bytes.
SHRC013=Shared cache "%s" memory remove failed
SHRC374=Cache created with\:
SHRC012=Cannot remove shared cache "%s" as there are JVMs still attached to the cache
SHRC373=JIT data bytes     \= %d
SHRC011=Error\: Cannot open shared class cache
SHRC372=\# Zip caches       \= %d
J9VM119=-Xscmaxjit is ignored if -Xshareclasses is not specified
SHRC010=Shared cache "%s" is destroyed
SHRC371=Zip cache bytes    \= %d
J9VM118=-Xscminjit is ignored if -Xshareclasses is not specified
SHRC370=-Xnolinenumbers                      \= false
J9VM117=-Xitsn is ignored if -Xshareclasses is not specified
J9RI023=jvmri->TraceRegister, jvmri->TraceDeregister and TraceListener no longer supported, use new versions in JVMRAS_VERSION_1_5
J9VM116=noLockword\:%.*s
J9RI022=initialise JVMRI unable to allocate jvmri dump monitor
J9VM115=lockword\:%.*s
J9RI021=jvmri->RunDumpRoutine not supported.
J9VM114=Lockword Mode\=%s
J9RI020=jvmri->CreateThread unable to allocate private monitor
J9VM113=-----------------------------
J9VM112=Lockword Configuration
J9VM111=Invalid lockword option specified\:%s
J9VM110=Invalid lockword mode specified\:%s
SHRC009=Shared cache opened\: %1$s size\: %2$d bytes
SHRC008=Shared cache created\: %1$s size\: %2$d bytes
SHRC369=-Xnolinenumbers                      \= true
SHRC007=Failed to remove shared class cache "%s"
SHRC368=Shutting down non debug enabled shared classes cache.
SHRC006=Number of caches expired within last %1$d minutes is %2$d
SHRC367=debug enabled      \= false
SHRC005=No shared class caches available
SHRC366=debug enabled      \= true
J9RI019=jvmri->InjectOutOfMemory not supported.
SHRC004=Cannot destroy cache "%s"
SHRC365=Enables the storage of class debug information in the shared class.
J9RI018=jvmri->NotifySignal raising signal %d.
SHRC003=last detach time
SHRC364=SH_OSCachesysv\:\:acquireWriteLock() call to j9shsem_wait on semid %d has failed with error %d.
J9RI017=Can't allocate dump agent in jvmri->SetOutOfMemoryHook, function not registered.
SHRC002=in use
SHRC363=Cannot allocate api for shared classes in shrinit
J9RI016=jvmri->SetOutOfMemoryHook called with NULL callback, function not registered.
SHRC001=OS shmid
SHRC362=Cannot allocate memory for ClasspathItem
J9VM109=Unsupported operating system (%s)\: Windows XP or newer is required.
J9RI015=jvmri->RunDumpRoutine\: componentId is out of bounds.
SHRC000=Shared Cache
SHRC361=Error while attaching to the shared memory during open/create
J9VM108=-Xlog\:info,warn,error\n
J9RI014=jvmri->RunDumpRoutine\: unable to retrieve component data.
SHRC360=Failed to find byte data for key %.*s in shared cache...
J9VM107=-Xlog\:error,warn
J9RI013=jvmri->ReleaseRasInfo\: structure has unsupported type field.
J9VM106=The info, warn, error, vital and config options can be combined with a ',' for example\:\n
J9RI012=jvmri->ReleaseRasInfo called with NULL RasInfo structure.
J9VM105=-Xlog\:config            Log JVM configuration messages.\n
J9RI011=RasInfo structure has unsupported type field.
J9VM104=-Xlog\:vital             Log JVM vital messages. This is turned on by default.
J9RI010=jvmri->GetRasInfo unable to allocate memory.
J9VM103=-Xlog\:error             Log JVM error messages. This is turned on by default.
J9VM102=-Xlog\:warn              Log JVM warning messages.
J9VM101=-Xlog\:info              Log JVM informational messages.
J9VM100=-Xlog\:all               Log all JVM messages.
SHRC359=Found byte data for key %.*s in shared cache...
SHRC358=Failed to store byte data for key %.*s in shared cache.
SHRC357=Stored byte data for key %.*s in shared cache.
SHRC356=Failed to store AOT code for ROMMethod 0x%1$p in shared cache.
J9RI009=jvmri->GetRasInfo unable to allocate memory.
SHRC355=Stored AOT code for ROMMethod 0x%1$p in shared cache.
J9RI008=jvmri->GetRasInfo unable to get components.
SHRC354=Failed to find AOT code for ROMMethod 0x%1$p in shared cache.
J9RI007=jvmri->GetRasInfo unable to allocate memory.
SHRC353=Found AOT code for ROMMethod 0x%1$p in shared cache.
J9RI006=jvmri->GetRasInfo called with NULL RasInfo structure.
SHRC352=Failed to store class %2$.*1$s in shared cache for class-loader id %3$d with Token %5$.*4$s.
J9RI005=jvmri->GetComponentDataArea component %s does not have dataArea under this vm.
SHRC351=Stored class %2$.*1$s in shared cache for class-loader id %3$d with Token %5$.*4$s.
J9RI004=jvmri->DynamicVerbosegc is not supported.
SHRC350=Failed to store class %2$.*1$s in shared cache for class-loader id %3$d with URL %5$.*4$s.
J9RI003=Can't allocate dump agent in jvmri->DumpRegister, function not registered.
J9RI002=jvmri->DumpRegister called with NULL callback, function not registered.
J9RI001=Internal error removing dump agent in jvmri->DumpDeregister, dump function may not have been deregistered.
J9RI000=jvmri->CreateThread cannot allocate thread arguments memory
SHRC349=Stored class %2$.*1$s in shared cache for class-loader id %3$d with URL %5$.*4$s.
SHRC348=Failed to store class %2$.*1$s in shared cache for class-loader id %3$d with URL %5$.*4$s (index %6$d).
SHRC347=Stored class %2$.*1$s in shared cache for class-loader id %3$d with URL %5$.*4$s (index %6$d).
SHRC346=Failed to find class %1$s in shared cache for class-loader id %2$d with Token %4$.*3$s.
SHRC345=Found class %1$s in shared cache for class-loader id %2$d with Token %4$.*3$s.
SHRC344=Failed to find class %1$s in shared cache for class-loader id %2$d with URL %4$.*3$s.
SHRC343=Found class %1$s in shared cache for class-loader id %2$d with URL %4$.*3$s.
SHRC342=Failed to find class %1$s in shared cache for class-loader id %2$d.
SHRC341=Found class %1$s in shared cache for class-loader id %2$d.
SHRC340=Shared Cache CRC check failed. Stored CRC %1$x, calculated CRC %2$x
SHRC339=Platform error message\: %1$s
SHRC338=Port layer error code \= %1$d
SHRC699=Failed to restore the non-persistent shared cache "%s" from the snapshot
SHRC337=Platform error message\: %1$s
SHRC698=Non-persistent shared cache "%s" has been restored successfully from the snapshot
SHRC336=Port layer error code \= %1$d
SHRC697=Failed to get a directory for the shared cache
SHRC335=Error recovery failed\: Destroying shared semaphore has failed.
SHRC696=Sub-options "%s" and "%s" are incompatible. Sub-option "%s" is ignored
SHRC334=Error recovery failed\: Destroying shared memory has failed.
J2SE000=-Djava.runtime.version=pwa6480sr4fp11-20170823_01 (SR4 FP11)
SHRC695=Restore a new non-persistent shared cache from a snapshot
SHRC333=Default memory page protection successfully enabled for cache
SHRC694=Destroy all shared cache snapshots
SHRC332=Data memory page protection successfully enabled for cache
SHRC693=Destroy the snapshot of a shared cache (use name parm or default)
SHRC331=Acquired a different semaphore than previously used with this cache
SHRC692=Create a snapshot of an existing non-persistent shared cache
SHRC330=SH_CompositeCacheImpl\:\:runExitCode failed to acquire the write area mutex (return code %d).
SHRC691=Restrict Classpaths                  \= false
SHRC690=Restrict Classpaths                  \= true
JITM018=Large page size %1$zu%2$s %3$s is not a supported page size for the JIT codecache; using %4$zu%5$s %6$s instead
JITM017=Large page size %1$zu%2$s %3$s is not a supported page size for the JIT codecache; using %4$zu%5$s instead
JITM016=Large page size %1$zu%2$s is not a supported page size for the JIT codecache; using %3$zu%4$s %5$s instead
JITM015=Large page size %1$zu%2$s is not a supported page size for the JIT codecache; using %3$zu%4$s instead
JITM014=Extra comma characters are discovered in '-Xlp' option - ignored
JITM013='%1$s' option is not complete, must specify '%2$s' parameter.
JITM012=Value for '%s' is not correct
JITM011=%s value specified is too large
JITM010=%s must be followed by a number
SHRC329=SH_CompositeCacheImpl\:\:enterReadWriteAreaMutex failed to acquire the string table mutex (return code %d).
SHRC328=System V IPC reported the following error '%s'
SHRC689=Allows a JVM to store classpaths in the cache created with "restrictClasspaths" option.
SHRC327=SH_OSCachesysv\:\:acquireWriteLock() call to j9shsem_wait has failed with error %d.
SHRC688=Classpaths can only be added by first JVM initializing the cache.
SHRC326=Failed posting the shared classes cache user lock failed during initialization. Warning\: your cache may be corrupt. If you experience problems using the shared cache, you may need to destroy and re-create it.
SHRC687=A new shared class cache cannot be created when running with -Xshareclasses\:readonly option
SHRC325=Failed posting the shared classes cache header lock failed during initialization. Warning\: your cache may be corrupt. If you experience problems using the shared cache, you may need to destroy and re-create it.
SHRC686=Failed to startup shared class cache. Continue without using it as -Xshareclasses\:nonfatal is specified
SHRC324=ERROR\: Failure when exiting the mutex for the shared class cache header. Warning\: your cache may be corrupt. If you experience problems using the shared cache, you may need to destroy and re-create it.
SHRC685=An error has occurred while opening shared memory. Control file could not be locked.
SHRC323=ERROR\: Failure when entering the mutex for the shared class cache header. Warning\: your cache may be corrupt. If you experience problems using the shared cache, you may need to destroy and re-create it.
SHRC684=An error has occurred while opening semaphore. Control file could not be locked.
SHRC322=Failed initializing semaphores for shared class cache. Warning\: your cache may be corrupt. If you experience problems using the shared cache, you may need to destroy and re-create it.
SHRC683=System limit on the total number of open files has been reached.
SHRC321=Error recovery\: closing shared memory semaphores.
SHRC682=System limit for maximum number of shared memory regions or system-wide limit on memory allocated to shared memory regions has been reached.
SHRC320=Error recovery\: destroying shared memory semaphores.
SHRC681=System limit for maximum number of semaphores or the system wide maximum number of semaphores has been reached.
SHRC680=Error recovery failure\: Failed to remove the semaphore set control file %s associated with shared class cache.
JITM009=System configuration does not support parameter '%.*s' in option '-Xlp'
JITM008=JIT failed to allocate memory
JITM007=AOT code in shared class cache cannot run with current JVMPI or JVMTI settings. Ignoring AOT code in shared class cache.
JITM006=AOT code in shared class cache cannot run with current garbage collection policy. Ignoring AOT code in shared class cache.
JITM005=AOT code in the shared class cache cannot run on current JVM release. Ignoring AOT code in shared class cache.
JITM004=AOT code in shared class cache cannot execute on current processor. Ignoring AOT code in shared class cache.
JITM003=Failure during AOT runtime initialization. Ignoring AOT code in shared class cache.
JITM002=Failure storing AOT code in shared class cache. Shared class cache might be corrupted. Ignoring AOT code in shared class cache.
JITM001=No more space for AOT code in shared class cache. New AOT code will not be generated.
JITM000=Unsupported hardware [%d].
SHRC319=Error recovery\: closing shared memory.
SHRC318=Error recovery\: destroying shared memory.
SHRC679=Error recovery failure\: Failed to remove the semaphore set control file %s associated with shared class cache.
SHRC317=Print the name of the shared class cache file that will be used.
SHRC678=Platform error message\: %1$s
SHRC316=Cannot serialize cache because there is no current VM thread.
SHRC677=Port layer error code \= %1$d
SHRC315=Cannot initialize cachelet class memory segments
SHRC676=Failed to destroy shared memory with shmid\=%d associated with shared class cache. 
SHRC314=Cannot allocate memory for hint lookup table in SH_Manager
SHRC675=Failed to destroy shared memory associated with shared class cache. 
SHRC313=Failed to create jclCacheMutex in shrinit
SHRC674=User is not allowed to destroy the shared memory with shmid\=%d. Only creator or owner or user with administrative privileges can destroy the shared memory.
SHRC312=Error releasing shared class cache file header write lock
SHRC673=Failed to destroy semaphore set with semid\=%d associated with shared class cache. 
SHRC311=Error releasing shared class cache file attach write lock
SHRC672=Failed to destroy semaphore set associated with shared class cache. 
SHRC310=Persistent cache cannot be located on a networked file system. Select a different cacheDir.
SHRC671=User is not allowed to destroy the semaphore set with semid\=%d. Only creator or owner or user with administrative privileges can destroy the semaphore set.
SHRC670=Error recovery\: attempting to use shared cache in readonly mode if the shared memory region exists, in response to "-Xshareclasses\:nonfatal" option.
SHRC309=The "grow" and "readonly" options may not be used together.
SHRC308=Failed to serialize cache "%s". Failed updating ROM Class offsets in AOT methods.
SHRC669=Error recovery failed\: Failed to destroy the shared memory with shmid\=%d associated with shared class cache.
SHRC307=\tROMMETHOD\: %2$.*1$s Signature\: %4$.*3$s Address\: 0x%5$p
SHRC668=Error recovery failed\: Failed to destroy the shared memory with shmid\=%d associated with shared class cache. Only creator or owner or user with administrative privileges can destroy the shared memory.
SHRC306=\ Signature\: %2$.*1$s Address\: 0x%3$p
SHRC667=Error recovery\: destroyed shared memory with id\=%d associated with shared class cache.
SHRC305=Cannot allocate memory for hint lookup table in SH_ClasspathManagerImpl2
SHRC666=Error recovery\: destroyed shared memory associated with shared class cache.
SHRC304=Failed to replace cache "%s"
SHRC665=Error recovery failed\: Failed to destroy the semaphore set with semid\=%d associated with shared class cache.
SHRC303=Failed to create nested cache "%s"
SHRC664=Error recovery failed\: Failed to destroy the semaphore set with semid\=%d associated with shared class cache. Only creator or owner or user with administrative privileges can destroy the semaphore set.
SHRC302=Can not grow nested cache "%s", failed to allocate block for hints
SHRC663=Error recovery\: destroyed semaphore set with id\=%d associated with shared class cache.
SHRC301=Can not grow nested cache "%s", failed to allocate new supercache for hints
SHRC662=Error recovery\: destroyed semaphore set associated with shared class cache.
SHRC300=The shared class cache is in use by another vm, cannot grow the nested cache
SHRC661=The JVM failed to associate shared memory id\=%d with the shared class cache.
SHRC660=The JVM failed to associate semaphore set id\=%d with the shared class cache.
VMUT014=Receiver class %2$.*1$s must be the current class or a subtype of interface %4$.*3$s
SHRC659=An error has occurred while opening shared memory
VMUT013=Options file %s invalid
SHRC658=The JVM could not check the permissions of the shared cache file.
VMUT012=%2$.*1$s is not a direct superinterface of %4$.*3$s.
SHRC657=The JVM does not permit access to the shared cache file because the JVM process's user ID and group ID are different from the shared cache file owner's user ID and group ID, and the JVM process's user ID does not belong to the shared cache file owner's group.
VMUT011=Could not allocate memory for command line option array
SHRC656=The JVM is not configured to access shared cache file. To attach to the shared class cache, use 'groupAccess' sub-option.
VMUT010=Malformed option value, option "%1$s%3$.*2$s" contains trailing characters "%4$s" which have been ignored
SHRC655=Cache is accessible to current user \= %s
SHRC654=The JVM does not permit access to the shared cache's shared memory region created and owned by another user not in its group.
SHRC653=The JVM is not configured to access shared memory associated with existing non-persistent shared class cache. To attach to the non-persistent shared class cache, use 'groupAccess' and 'readonly' sub-option.
SHRC652=The JVM is not configured to access shared memory associated with existing non-persistent shared class cache. To attach to the non-persistent shared class cache, use 'groupAccess' sub-option.
SHRC651=The JVM detected effective user id of the process is the owner but not the creator of shared memory associated with the shared cache. JVM will not attach to the shared cache to prevent accessing unintended shared cache.
SHRC650=The JVM could not check the permissions of the shared memory associated with the shared cache.
VMUT009=Malformed value for -Xservice
VMUT008=Malformed value for IBM_JAVA_OPTIONS
VMUT007=Malformed value for JAVA_TOOL_OPTIONS
VMUT006=Malformed option %s found in -Xoptionsfile
VMUT005=Option too large\: '%s'
VMUT004=Malformed option\: '%s'
SHRC649=The JVM does not permit access to the shared cache's semaphore set created and owned by another user not in its group.
VMUT003=Options file not found
SHRC648=The JVM is not configured to access semaphore set associated with existing non-persistent shared class cache. To attach to the non-persistent shared class cache, use 'groupAccess' sub-option.
VMUT002=(access error)
SHRC647=The JVM detected effective user id of the process is the owner but not the creator of semaphore set associated with the shared cache. JVM will not attach to the shared cache to prevent accessing unintended shared cache.
VMUT001=(unnamed thread)
SHRC646=The JVM could not check the permissions of the semaphore set associated with the shared cache.
VMUT000=(out of memory)
SHRC645=Enable mprotect diagnostic mode
SHRC644=JVM has attached to the shared class cache created in mprotect diagnostic mode (using -Xshareclasses\:mprotect\=diagnostic option). -Xshareclasses\:mprotect\=none option will be ignored.
SHRC643=JVM has attached to the shared class cache created in mprotect diagnostic mode (using -Xshareclasses\:mprotect\=diagnostic option). Using the cache in this mode can affect performance.
SHRC642=JVM has created shared class cache in mprotect diagnostic mode (using -Xshareclasses\:mprotect\=diagnostic option). Using the cache in this mode can affect performance.
SHRC641=JVM is attempting to use the existing shared class cache in mprotect diagnostic mode (using -Xshareclasses\:mprotect\=diagnostic option), but the cache was not creating in this mode. In such case mprotect\=diagnostic option is ignored on z/OS.
SHRC640=JVM is using the existing shared class cache in mprotect diagnostic mode (using -Xshareclasses\:mprotect\=diagnostic option), but the cache was not creating in this mode. Using the cache in this mode can affect performance.
J9GC089=The -Xgc\:preferredHeapBase option is not supported on z/OS.
J9GC088=Requested objectheap page size %1$zu%2$s could not be satisfied; using %3$zu%4$s instead
J9GC087=Unable to satisfy heap size %1$zu%2$s with page size %3$zu%4$s. Heap size can be specified with -Xmx
J9GC086=Failed to instantiate compressed references metadata; %1$zu%2$s requested
SHRC639=Only shared cache utility options can be used in combination with -Xmt. Put other shared cache options in the javad.options file.
J9GC085=compressed references metadata initial size
SHRC638=Cache creation with the cacheRetransformed option forces disableBCI mode.
J9GC084=OS clock resolution claims to not support the requested target pause time.  Overriding due to command line option -Xgc\:overrideHiresTimerCheck
SHRC637=The -Xshareclasses\:cacheRetransformed sub-option is incompatible with an existing BCI enabled shared cache.
J9GC083=Failed to initialize, multitenancy only supports -Xgcpolicy\:balanced
SHRC636=The "disableBCI" sub-option is incompatible with existing BCI enabled shared cache.
J9GC082=Requested for %1$s page size %2$zu%3$s%4$s is not a supported page size; using %5$zu%6$s%7$s instead
SHRC635=Store intermediate classfile \= true
J9GC081=Extra comma characters are discovered in '-Xlp' option - ignored
SHRC634=The "-XX\:-StoreIntermediateClassfile" option was specified but the existing cache was created with the "-XX\:+StoreIntermediateClassfile" option.
J9GC080=System configuration does not support parameter '%.*s' in option '-Xlp'
SHRC633=The "-XX\:+StoreIntermediateClassfile" option was specified but the existing cache was not created with the "-XX\:+StoreIntermediateClassfile" option.
SHRC632=Space reserved for JIT data in shared cache "%s" is full. Use -Xscminjitdata to increase space reserved for JIT data.
SHRC631=Space reserved for AOT data in shared cache "%s" is full. Use -Xscminaot to increase space reserved for AOT data.
SHRC630=Space is full for storing non-AOT/non-JIT data, such as classes, in shared cache "%s".
J9GC079='%1$s' option is not complete, must specify '%2$s' parameter.
J9GC078='%1$s' is not specified as the first parameter in '%2$s' option
J9GC077=System configuration does not support requested %1$zu%2$s %3$s large page size
J9GC076=System configuration does not support requested %1$zu%2$s large page size
SHRC629=Shared memory control file is read only.
J9GC075=An error occurred in parsing '-Xlp' option
SHRC628=Shared memory control file is not readable.
J9GC074=Large page size %1$zu%2$s %3$s is not a supported page size; using %4$zu%5$s %6$s instead
SHRC627=Recreation of shared memory control file is not allowed when running in read-only mode.
J9GC073=Large page size %1$zu%2$s %3$s is not a supported page size; using %4$zu%5$s instead
SHRC626=The stats of the shared cache cannot be obtained since a valid shared cache does not exist.
J9GC072=Large page size %1$zu%2$s is not a supported page size; using %3$zu%4$s %5$s instead
SHRC625=Error opening shared memory region. Check for shared memory size failed.
J9GC071=Value for '%s' is not correct
SHRC624=Error opening shared memory region. Check for user id failed.
J9GC070=Failed to startup the Garbage Collector
SHRC623=Error opening shared memory region. Check for group id failed.
SHRC622=Error opening shared memory region. Mismatch in shared memory key.
SHRC621=Error opening shared memory region. Mismatch in shared memory ID.
SHRC620=Error opening shared memory region. Control file is found to be corrupt.
J9GC069=Failed to initialize Finalize thread
J9GC068=ScopedMemory.join/joinAndEnter interrupted 
J9GC067=Failed to instantiate split heap\: %1$s (new size %2$zu%3$s, old size %4$zu%5$s)
J9GC066=Required split heap memory geometry could not be allocated
SHRC619=Semaphore control file is read only.
J9GC065=Failed to allocate new space
SHRC618=Semaphore control file is not readable.
J9GC064=Failed to allocate old space
SHRC617=An error has occurred while opening semaphore. Semaphore marker not found in the semaphore set.
J9GC063=Unable to open file '%s' for writing
SHRC616=An error has occurred while opening semaphore. Mismatch in number of semaphores in the semaphore set.
J9GC062=%s value must be a power of two
SHRC615=An error has occurred while opening semaphore. Mismatch in semaphore key.
J9GC061=scoped memory space maximum size
SHRC614=An error has occurred while opening semaphore. Mismatch in semaphore ID.
J9GC060=immortal memory space size
SHRC613=An error has occurred while opening semaphore. Control file is found to be corrupt.
SHRC612=Artificially set the storage key (0-15) on z/OS for testing.
SHRC611=The "disableBCI" sub-option is specified but the existing cache was created with the "enableBCI" sub-option.
SHRC610=Disable support for byte-code instrumentation.
J9GC059=-Xgcpolicy\:metronome is not allowed without -Xrealtime
J9GC058=Failed to allocate immortal memory space
J9GC057=%1$s must be no greater than %2$s
J9GC056=available large page sizes\:
SHRC609=Updated %1$s attached data%2$s for %8$.*7$s.%4$.*3$s%6$.*5$s
J9GC055=large page size
SHRC608=Found %1$s attached data %2$sfor %8$.*7$s.%4$.*3$s%6$.*5$s
J9GC054=Large page size %1$zu%2$s is not a supported page size; using %3$zu%4$s instead
SHRC607=Stored %1$s attached data %2$sfor %8$.*7$s.%4$.*3$s%6$.*5$s
J9GC053=memory maximum
SHRC606=Add nonfunctional JIT hints to methods for testing; use with -Xint and a prepopulated cache. 
J9GC052=ROM class segment increment
SHRC605=The memory size for "%s" is too large, or specifies units other than 'K','M', or 'G'.
J9GC051=RAM class segment increment
SHRC604=Reserve <size> bytes of cache space for raw class data
J9GC050=soft memory maximum
SHRC603=Raw class data used bytes           %*c\= %lu
SHRC602=Raw class data area %% used          %*c\= %lu%%
SHRC601=Raw class data area size            %*c\= %lu 
SHRC600=The raw class data area is corrupt because storing %u bytes will exceed the available area free space ('free space start'\=%p, 'free space end'\=%p).
J9GC049=remembered set size
J9GC048=old space increment
J9GC047=maximum old space size
J9GC046=initial old space size
J9GC045=initial memory size
J9GC044=maximum new space size
J9GC043=initial new space size
J9GC042=Sum of %1$s and %2$s too small for %3$s
J2JX099=Incomplete option(s) on command line. First was\: %s
J9GC041=Unknown fvtest type\: %s
J2JX098=Invalid argument [%1$s] for option\: %2$s
J9GC040=Unknown option\: %s
J2JX097=Unrecognized option(s) on command line. First was\: %s
J2JX096=Failed to find function j9bcv_verifyCreateStackAttributes
J2JX095=Failed to find function j9bcv_verifyClassStructure
J2JX094=Failed to open verifier DLL %1$s\: %2$s
J2JX093=No class files specified on the command line
J2JX092=Internal error with newly created VM
J2JX091=Successfully created the Java VM
J2JX090=Attempting to create a Java VM for use with AOT
J9GC039=%1$s is deprecated; use %2$s instead
J9GC038=%s value specified is too large
J9GC037=%1$s not supported with values other than %2$zu
J9GC036=%1$s value must be above %2$zu
J9GC035=%s must be followed by a number
J9GC034=%1$s value must be between %2$zu and %3$zu (inclusive)
J9GC033=%1$s value must be between %2$.2f and %3$.2f (inclusive)
J9GC032=System configuration does not support option '%s'
J2JX089=Internal Error\: could not find %1$s in %2$s
J9GC031=%1$s and %2$s cannot both be specified
J2JX088=Internal Error\: failed to open %1$s\: %2$s
J9GC030=%1$s value of %2$.2f must be at least %3$s less than %4$s value of %5$.2f
J2JX087=Internal Error\: could not determine executable name
J2JX086=Wrote %1$i bytes to symbol file %2$s
J2JX085=Internal Error\: unsupported error code from create rom class %d
J2JX084=Closing segment %d and starting a new segment
J2JX083=Including %s in AOT
J2JX082=Excluding %s from AOT
J2JX081=Error\: %s
J2JX080=Verification error in method %1$i (%3$.*2$s%5$.*4$s) at PC %6$i
J9GC029=Option error\: '%s'
J9GC028=Option too large\: '%s'
J9GC027=Malformed option\: '%s'
J9GC026=-Xverbosegclog failed to allocate internal structures
J9GC025=Sum of %1$s and %2$s
J9GC024=Sum of %1$s and %2$s too large for heap
J9GC023=Sum of %1$s and %2$s must equal %3$s
J9GC022=Sum of %1$s and %2$s too large for %3$s
J2JX079=Error\: %1$s at %2$i
J9GC021=%1$s must equal %2$s
J2JX078=Recommended action\:
J9GC020=%s too large for heap
J2JX077=Invalid class file
J2JX076=Invalid class file\: %s
J2JX075=Entry name too long\: %s
J2JX074=Attempted to add duplicate entry to JXE\: %s
J2JX073=dir processing file\: %s
J2JX072=Could not open directory %s
J2JX071=Processing directory\: %s
J2JX070=increasing space to\: %i bytes
J9GC019=%1$s too large for %2$s
J9GC018=%1$s too small for %2$s
J9GC017=%1$s too small, must be at least %2$zu %3$sbytes
J9GC016=Failed to allocate survivor segment in default memory space
J9GC015=Failed to allocate default memory space
J9GC014=Failed to allocate VM class memory segments
J9GC013=Failed to allocate VM object memory segments
J9GC012=Failed to allocate VM memory segments
J2JX069=estimated memory size\: %i bytes
J9GC011=Failed to initialize pool of memory spaces
J2JX068=file size\: %i bytes
J9GC010=Failed to initialize finalization management
J2JX067=No valid class found in %s
J2JX066=Could not open file\: %s
J2JX065=Error closing zip file\: %s
J2JX064=The valid values for the -precompileTarget option are\:
J2JX063=Defaults are\:
J2JX062=classfile(s)                any number of files ending with .class, .jar, or .zip will\n                            be examined and added to the jxe\n
J2JX061=Ahead-of-time compilation options\:\n  -[no]precompile           [do not] mark all methods for precompilation\n  -[no]precompileMethod xxx [do not] mark named methods for precompilation\n  -[no]compileAheadOfTime   compile marked method ahead of time\n  -precompileTarget xxx     generate jxe for target architecture and OS xxx\n  -precompileOptions xxx    pass xxx to the precompilation engine\n  -[no]precompileResolve    [do not] attempt to resolve external references during precompilation\n  -[no]stripBytecode        [do not] strip bytecode for aot compiled methods\n
J2JX060=\  -j2se                     use this option when using jar2jxe in a Java SE environment\n
J9GC009=Failed to initialize mutex for GC statistics
J9GC008=Failed to initialize module extensions
J9GC007=Failed to initialize; unable to parse command line
J9GC006=Failed to initialize; out of memory
J9GC005=Failed to initialize
J9GC004=Failed to instantiate global garbage collector
J9GC003=Failed to instantiate task dispatcher
J9GC002=Failed to instantiate heap; %1$zu%2$s requested
J2JX059=\  -[no]tools                the tools directory is [not] added to the list of extension directories
J9GC001=Failed to instantiate heap
J2JX058=\  -padJxe                   pad the jxe at end with xxx extra bytes
J9GC000=Internal error; out of memory
J2JX057=\  -[no]segmented            [do not] generate multiple segmented jxes\n  -maxSegmentSize xxx       max size for any segmented jxe (hex number)\n  -maxSegmentSize seg\=xxx   max size for specific segmented jxe (hex number)\n  -locate xxx               locate the image to address xxx (hex number)\n  -locate seg\=xxx           locate the image of a segment to hex address xxx
J2JX056=\  -fileExtension xxx        treat files ending with .xxx as .jar files
J2JX055=\  -vmOption xxx             use a vmOption xxx when running jxe
J2JX054=\  -versionName xxx          set version name of jxe to xxx
J2JX053=\  -description xxx          set description of jxe to xxx
J2JX052=\  -uuid xxx                 set the UUID of the jxe to xxx
J2JX051=\  -D xxx\=yyy                set system property xxx to yyy
J2JX050=\  -startupClass xxx         set startup class to xxx\n  -noStartupClass           indicate the jxe doesn't have a startup class
J2JX049=\  -srcDir xxx               include all files in directory tree xxx
J2JX048=\  -outputFormat xxx         set the output format to xxx (c, bin, or jar)
J2JX047=\  -o xxx                    set base output filename to xxx
J2JX046=\  -be                       generate big endian output\n  -le                       generate little endian output
J2JX045=\  -version                  print out the version of this program
J2JX044=\  -[no]profile              [do not] generate a .prf file for profiling
J2JX042=\  -[no]verify               [do not] verify the class file format
J2JX041=\  -q                        quiet mode\n  -[no]logo                 [do not] print copyright message\n  -verbose                  verbose mode
J2JX040=Usage\:\t%s [options] classfile(s)\n\n[options]\n  -help, -?                 print usage
VERB038=shared class cache soft max size
VERB037=shared class cache size
VERB036=compressed references metadata initial size
VERB035=available large page sizes for JIT code cache\:
VERB034=large page size for JIT code cache
VERB033=max allowed shared class cache space for JIT data
VERB032=min reserved shared class cache space for JIT data
VERB031=reserved shared class cache space for class debug attributes
VERB030=max allowed shared class cache space for JIT
J2JX039=IBM is a registered trademark of IBM Corp.\nJava and all Java-based marks and logos are trademarks or registered\ntrademarks of Sun Microsystems, Inc.
J2JX038=Licensed Materials - Property of IBM
J2JX036=Target\: %s\n
J2JX035=(c) Copyright IBM Corp. 1991, 2005  All Rights Reserved
J2JX034=J9 Java(TM) JAR to JXE, Version %s
J2JX033=Internal Error\: failed the properly build the Error'd rom class
J2JX032=Unbalanced quotes in parameter list
J2JX031=finished reading JAR file\: %s
J2JX030=Error reading %1$s from %2$s
CFRE142=Class has more than one RuntimeInvisibleAnnotations or RuntimeVisibleAnnotations attribute
CFRE141=method_info has more than one RuntimeInvisibleParameterAnnotations or RuntimeVisibleParameterAnnotations attribute
VERB029=min reserved shared class cache space for JIT
CFRE140=method_info has more than one AnnotationDefault attribute
VERB028=Verbose stack\: Unable to print the stack info for currently running threads
VERB027=Verbose stack\: Running thread "%2$.*1$s" is using %3$zd/%4$zd bytes on Java/C stacks
VERB026=Invalid classpath entry\: %s (opposite endian jxe not supported)
VERB025=Invalid classpath entry\: %s (jxe corrupt image header)
VERB024=Invalid classpath entry\: %s (jxe missing rom.classes)
VERB023=Invalid classpath entry\: %s (unknown error)
VERB022=Invalid classpath entry\: %s (unknown file type)
VERB021=Invalid classpath entry\: %s (unsupported file type)
VERB020=Invalid classpath entry\: %s (file corrupt)
J2JX029=processing\: %s
J2JX028=Error reading entry from %s
J2JX027=Could not open or read %s
J2JX026=segment %d could not fit within the required maximum segment size
J2JX025=Attempted to add duplicate class to JXE %s
J2JX024=added class file\: %s
J2JX023=attempting to add class file\: %s
J2JX022=%s is invalid
J2JX021=Could not load %1$s\: %2$s
J2JX020=growing ncpRef [%1$x] from %2$u entries to %3$u entries
CFRE139=Class has more than one SourceDebugExtension attribute
CFRE138=Classfile attribute refers to a non-existent constant pool entry
CFRE137=Class has more than one RuntimeVisibleTypeAnnotations or RuntimeInvisibleTypeAnnotations attribute
CFRE136=illegal modifiers for interface method
CFRE135=Method parameter name is not UTF8
CFRE134=Method parameter has an invalid flag.
CFRE133=Method has two MethodParameters attributes
CFRE132=type_annotation target_type not recognized 
CFRE131=BootstrapMethods attribute required by invokedynamic is absent or too small 
VERB019=Invalid classpath entry\: %s (file read failed)
CFRE130=multiple BootstrapMethods attributes
VERB018=Invalid classpath entry\: %s (file I/O failed)
VERB017=max allowed shared class cache space for AOT
VERB016=min reserved shared class cache space for AOT
VERB015=shared class cache size
VERB014=memory maximum
VERB013=ROM class segment increment
VERB012=RAM class segment increment
VERB011=java thread stack size
VERB010=java thread stack maximum size
J2JX019=growing buffer [%1$x] from %2$u to %3$u
J2JX018=Successfully created %s
J2JX017=Failed to write data to file\: %s
J2JX016=Failed to create/clear file\: %s
J2JX015=Unknown error code\: %d
J2JX014=AOT initialization failed
J2JX013=Internal Error\: Endian flip failed
J2JX012=Supplied UUID is invalid
J2JX011=Internal Error\: ZIP Entry not closed
J2JX010=Internal Error\: read failed
CFRE129=constant pool entry not valid in class files with versions < 51.0
CFRE128=methodtype signature invalid
CFRE127=bootstrap method index must refer to a MethodHandle constant pool entry
CFRE126=invokedynamic bytecode reserved slots not zero
CFRE125=invokedynamic bytecode must reference an InvokeDynamic constant pool entry
CFRE124=annotation element value tag is invalid
CFRE123=MethodHandle constants must refer to either a field or method reference
TRCE020=Timeout occurred during trace engine termination
CFRE122=class can be at most one of public or module
CFRE121=illegal field name
VERB009=java thread stack increment
CFRE120=jsr and jsr_w opcodes are not valid in class files with versions >\= 51.0
VERB008=java thread stack initial size
VERB007=operating system thread stack size
VERB006=Failed to initialize
VERB005=Error\: -Xverbosegclog missing filename
VERB004=Error\: -Xverbosegclog number of cycles must be greater than 0
VERB003=Error\: -Xverbosegclog number of files must be greater than 0
VERB002=Verbose stack\: maximum stack use was %1$zd/%2$zd bytes on Java/C stacks
VERB000=Verbose stack\: "%2$.*1$s" used %3$zd/%4$zd bytes on Java/C stacks
J2JX009=Internal Error\: seek failed
J2JX008=Internal Error\: no entries
J9VM099=-Xlog\:none              Disable JVM log options previously specified, including defaults.
J2JX007=Internal Error\: Duplicate entry
J9VM098=-Xlog\:help              Print JVM -Xlog help.
J2JX006=Out of memory
J9VM097=\nUsage\:\n
J2JX005=Internal Error\: size mismatch
J9VM096=-Xscdmx is ignored if -Xshareclasses is not specified
J2JX004=Internal Error\: CRC MISMATCH
J9VM095=loading constraint violation when resolving method "%2$.*1$s.%4$.*3$s%6$.*5$s" \: loader "%8$.*7$s@%9$x" of class "%11$.*10$s" and loader "%13$.*12$s@%14$x" of class "%16$.*15$s" have different types for the method signature
J2JX003=Internal Error\: bad function argument
J9VM094=Thread "%s" is still alive after running the shutdown hooks.
J2JX002=Precompiled %1$d of %2$d method(s) for target %3$s.
J9VM093=This version of Java requires a CPU that supports SSE2 or later extensions.  See the 'Supported Environments' information in the IBM Java User Guide for more details.
J2JX001=Stored resource\: %s
J9VM092=Adaptive spinning not supported
J2JX000=Attempted to add duplicate resource file [%s], file ignored.
J9VM091=Adaptive spinning supported
TRCE019=Trace engine failed to initialize properly, RC \= %d
J9VM090=Slow response to network query (%d secs), check your IP DNS configuration
TRCE018=Unable to allocate UTE thread local storage key
TRCE017=Unable to allocate RAS thread local storage key
CFRE119=multiple SourceFile attributes
TRCE016=Storage for RasGlobalStorage not available, trace not enabled
CFRE118=extra bytes after EOF
TRCE015=Error registering trace write subscriber
CFRE117=field cannot be both final and volatile
TRCE014=Trace engine initialization failed, trace not enabled
CFRE116=invoke bytecode must reference a Methodref
TRCE013=Writing trace count info to %s
CFRE115=array dimensions > 255
TRCE012=Unable to open trace point counter file %s, counters redirected to stderr.
CFRE114=field name is invalid
TRCE011=Module not configured for trace\: %s
CFRE113=unexpected EOF
TRCE010=Native memory allocation failure, falling back to nodynamic trace settings.
CFRE112=VM does not support dynamic verification
CFRE111=malformed UTF8
CFRE110=incompatible constant for field
J9VM089=Warning\: unable to verify syscorepath settings using sysconfig\: %s.
J9VM088=Warning\: syscorepath has not been configured which may prevent system core file generation (if one is needed).\n\t\tPlease consult the WebSphere Real Time installation instructions for proper syscorepath configuration settings.\n\t\tNOTE\: syscorepath must be configured each time the machine is restarted.
J9VM087=resetDumpOption requires %s
J9VM086=Option too large\: '%s'
J9VM085=Malformed option\: '%s'
J9VM084=IFA Error\: unexpected return code %08x from IFA switch service
J9VM083=Error switching to IFA processor rc\: %08x
J9VM082=Unable to switch to IFA processor - issue "extattr +a lib%s.so"
J9VM081=Malformed option value, option "%1$s%3$.*2$s" contains trailing characters "%4$s" which have been ignored
TRCE009=Error writing to snap file
J9VM080=queryVmDump requires %s
TRCE008=Error performing seek in tracefile\: %s
TRCE007=Error opening next trace file generation\: %s
CFRE109=method signature invalid
TRCE006=Error writing %d bytes to trace file\: %s rc\: %d
CFRE108=enclosing method method index must reference a name and type
TRCE005=Error writing header to trace file\: %s
CFRE107=offset out of range in jump bytecode
TRCE004=Error opening trace file\: %s
CFRE106=duplicate method
TRCE003=Error processing trace option, detail\: %s
CFRE105=superClass must be a class
TRCE002=Error processing trace option\: -Xtrace\:%s\=%s
CFRE104=field can be at most one of public private or protected
TRCE001=Error processing trace option\: -Xtrace\:%s
CFRE103=abstract method may not be private, static, final, native, synchronized or strict
TRCE000=Trace option unrecognized\: -Xtrace\:%s
CFRE102=field signature invalid
CFRE101=offset out of range in switch bytecode
CFRE100=too many dimensions requested in multianewarray bytecode
J9VM079=triggerOneOffDump(%1$s) requires %2$s
J9VM078=Malformed value for JAVA_TOOL_OPTIONS
J9VM077=Note\: -Xdfpbd has no effect in this release of Java
J9VM076=native memory exhausted allocating list entry for finalizable or reference object
J9VM075=illegal operation on eventron thread
J9VM074=Class %2$.*1$s illegally accessing %3$s class %5$.*4$s 
J9VM073=Class %2$.*1$s illegally accessing %3$s member of class %5$.*4$s
J9VM072=native memory exhausted
J9VM071=attempt to recursively bind native method %2$.*1$s.%4$.*3$s%6$.*5$s
J9VM070=native memory exhausted during bind of native method %2$.*1$s.%4$.*3$s%6$.*5$s
J9VM069=loading constraint violation\: loader "%2$.*1$s@%3$x" previously initiated loading for a different type with name "%5$.*4$s" defined by loader "%7$.*6$s@%8$x"
J9VM068=-Xshareclasses not enabled, -Xzero\:sharestring option ignored
J9VM067=-Xshareclasses not enabled, -Xzero\:sharezip option ignored
J9VM066=argument type mismatch
J9VM065=object is not an instance of declaring class
J9VM064=setDumpOption requires %s
J9VM063=seekDumpAgent requires %s
J9VM062=removeDumpAgent requires %s
J9VM061=insertDumpAgent requires %s
J9VM060=runNamedDump(%1$s) requires %2$s
J9VM059=-Xscmaxaot is ignored if -Xshareclasses is not specified
J9VM058=-Xscminaot is ignored if -Xshareclasses is not specified
J9VM057=Monitor cache limit exceeded
J9VM056=Major version
J9VM055=Unrecoverable error\: JXE Major version different than %d
J9VM054=Failed to create a thread\: retVal %1$zd, errno %2$zd
J9VM053=Malformed option %s found in -Xoptionsfile
J9VM052=\   -Xjni\:arrayCacheMax\=[<x>|unlimited] set maximum size of JNI cached array\n
J9VM051=Usage\:\n
J9VM050=-Xjni\: unrecognized option --> '%s'
J9VM049=JLM hold times not supported
J9VM048=JLM hold times supported
J9VM047=JLM not supported
J9VM046=JLM supported
J9VM045=Three-tier system monitors not supported
J9VM044=Three-tier system monitors supported
J9VM043=-----------------------
J9VM042=Threading Configuration
J9VM041=wrong number of arguments
J9VM040=operating system stack overflow
SHRC299=The shared class cache "%s" was not created with the nested option, cannot grow the cache
SHRC298=To run "%s" utility on persistent class cache "%s", use the "persistent" suboption
SHRC297=To use persistent shared class caches on AIX, environment variable CORE_MMAP must be set to "yes"
SHRC296=Running with option "noCoreMmap" will mean that IBM will be unlikely to assist with any crashes as class data will be missing from system dumps 
SHRC295=Switch off dependency on having CORE_MMAP on AIX
SHRC294=%1$d\: 0x%2$p CHARARRAY\: at 0x%3$p.
SHRC293=Cannot allocate memory for hastable item pool in ROMClassResourceManager
SHRC292=Cannot enter ROMClassResourceManager hashtable mutex
J9VM039=-Xscmx is ignored if -Xshareclasses is not specified
SHRC291=Cannot allocate memory for hashtable entry in ROMClassResourceManager
J9VM038=-Xthr\: unrecognized option --> '%s'
SHRC290=Failed to create new hash table item in ROMClassResourceManager
J9VM037=Failed to allocate monitor
J9VM036=divide by zero
J9VM035=Unable to allocate OutOfMemoryError
J9VM034=JVMRI requires trace engine\: run with -Xtrace flag
J9VM033=Unrecoverable error\: failed to initialize %s
VRFY042=%1$s; class\=%3$.*2$s, method\=%5$.*4$s%7$.*6$s, pc\=%8$u; Type Mismatch, argument %9$d in signature %11$.*10$s.%13$.*12$s\:%15$.*14$s does not match
J9VM032=Unrecoverable error\: unable to load %1$s\: %2$s
VRFY041=invokespecial of wrong initializer
J9VM031=Required class %2$.*1$s must be in the boot classpath, but was found in the application class path in %4$.*3$s
VRFY040=verifier unable to allocate native memory
J9VM030=Invalid UTF8 used in JNI function
SHRC289=Do not detect when a cache is located on a remote networked filesystem
SHRC288=shared memory ID   \= %d
SHRC287=Persistent cache cannot be located on a networked file system. Either select "nonpersistent" or a different cacheDir.
SHRC286=Opened shared class cache %1$s read-only
SHRC285=Opened shared class persistent cache %1$s read-only
SHRC284=Cannot create a cache in readonly mode
SHRC283=Open the cache with read-only permissions
SHRC282=The page size of the operating system is incompatible with this cache. Attempting to re-create the cache.
VRFY039=unknown bytecode
J9VM029=\tat (Unknown Method)
SHRC281=Attempting to destroy all caches in cacheDir %s
VRFY038=invokespecial on invalid target
J9VM028=\tat %2$.*1$s.%4$.*3$s (%6$.*5$s\:%7$u)
SHRC280=Listing all caches in cacheDir %s
VRFY037=uninitialized object during backwards branch
J9VM027=\tat %2$.*1$s.%4$.*3$s (%6$.*5$s)
VRFY036=stack underflow
J9VM026=\tat %2$.*1$s.%4$.*3$s (Unknown Source)
VRFY035=no error
J9VM025=\tat %2$.*1$s.%4$.*3$s (Native Method)
VRFY034=target PC invalid
J9VM024=Exception in thread "%.*s" 
VRFY033=field not type compatible
J9VM023=This may indicate that JAVA_HOME is incorrect, or that class libraries are not installed
VRFY032=bad receiver for <init>
J9VM022=Stack map failed, result \= %p - aborting VM
VRFY031=attempt to iinc non integer
J9VM021=Out of memory for interpreter stack map - aborting VM
VRFY030=bad type on stack
J9VM020=Searched in %.*s
SHRC279=Re-create shared cache on startup
SHRC278=Note that utility "%s" cannot operate on incompatible class cache "%s". Please use a JVM of the correct level.
SHRC277=To run the "%s" utility on a nonpersistent shared cache "%s", you must also use the "nonpersistent" suboption
SHRC276=To run "%s" utility on persistent class cache "%s", do not use "nonpersistent" suboption
SHRC275=Set the location of the JVM cache files
SHRC274=Memory page protection disabled for cache
SHRC273=Default memory page protection successfully enabled for cache
SHRC272=Full memory page protection successfully enabled for cache
VRFY029=invalid returnAddress for ret instruction
J9VM019=Unrecoverable error\: Unable to find and initialize required class %.*s
SHRC271=Unrecognised sub-option for option mprotect\=
VRFY028=bad dimension
J9VM018=Could not allocate memory for shared library load table pool
SHRC270=Configure cache memory page protection
VRFY027=receiver is incompatible with declaring class
J9VM017=Could not allocate memory for command line option array
VRFY026=unexpected EOF
J9VM016=Shutdown error for library %1$s(%2$d)\: %3$s
VRFY025=bad access to protected data
J9VM015=Initialization error for library %1$s(%2$d)\: %3$s
VRFY024=arguments are not type compatible
J9VM014=Shutdown error in function %1$s(%2$d)\: %3$s
VRFY023=tableswitch parameter not integer
J9VM013=Initialization error in function %1$s(%2$d)\: %3$s
VRFY022=subroutines must be re-walked for each jsr
J9VM012=Unable to unload %1$s\: %2$s
VRFY021=thrown object not throwable
J9VM011=Unable to load %1$s\: %2$s
VRFY020=invoke arguments not type compatible
J9VM010=Failed to initialize %s
SHRC269=The system does not support memory page protection
SHRC268=[-Xshareclasses caching of bootclasspath entries disabled]
SHRC267=Disable caching of classes from the bootclasspath
SHRC266=[-Xshareclasses caching of retransformed classes enabled]
SHRC265=Cache classes that are retransformed via JVMTI
SHRC264=Don't round cache areas to page boundaries
SHRC263=Enable CompositeCache verbose pages
SHRC262=Data bytes         \= %d
VRFY019=class load failed
J9VM009=J9VMDllMain failed
SHRC261=Enable string intern verbose output
VRFY018=max stack exceeded
J9VM008=J9VMDllMain not found
SHRC260=Failed to create pool in ByteDataManager
VRFY017=<init> does not call this <init> or super <init>
J9VM007=Command-line option unrecognised\: %s
VRFY016=shift bytecode parameter not integer
J9VM006=Invalid command-line option\: %s
VRFY015=multiple returns to single jsr
J9VM005=Invalid value for environment variable\: %s
VRFY014=return bytecode incompatible with return type
J9VM004=Cannot load library required by\: %s
VRFY013=class loading constraint violated
J9VM003=JIT compiler "%s" not found. Will use interpreter.
VRFY012=stack shape inconsistent
J9VM002=Options file not found
VRFY011=lookupswitch parameter not integer
J9VM001=Malformed value for -Xservice
VRFY010=multiple jsrs use single return
J9VM000=Malformed value for IBM_JAVA_OPTIONS
SHRC259=Cannot enter Manager hashtable mutex
SHRC258=Cannot allocate memory for hashtable entry in Manager
SHRC257=Cannot allocate memory for linked list item in Manager
SHRC256=Persistent shared cache "%1$s" has been destroyed
SHRC255=Error updating shared class cache file last detached time on JVM exit
SHRC254=Error setting length of shared class cache file
SHRC253=Error writing header to shared class cache file
SHRC252=Error seeking on shared class cache file
VRFY009=array not type compatible
SHRC251=Don't auto-delete caches from different buildIDs
VRFY008=array index not integer
SHRC250=Cache cannot be opened read-only as it has not yet initialized
VRFY007=final method overridden
VRFY006=new array size not integer
VRFY005=local not type compatible
VRFY004=jsr inlining encountered too many jsrs
VRFY003=class does not contain pre-verify data
VRFY002=bytecode sequence invalid
VRFY001=%1$s; class\=%3$.*2$s, method\=%5$.*4$s%7$.*6$s
VRFY000=%1$s; class\=%3$.*2$s, method\=%5$.*4$s%7$.*6$s, pc\=%8$u
SHRC249=Error shared class cache file header modlevel is invalid
SHRC248=Error shared class cache file header version is invalid
JNCK100=JNI advice in %1$s\: This function cannot be used with packed objects. Please use %2$s instead
SHRC247=Error shared class cache file header eyecatcher is invalid
SHRC246=Attached shared classes persistent cache %1$s
SHRC245=Error mapping shared class cache file
SHRC244=Error obtaining shared class cache file length
SHRC243=Error releasing shared class cache file attach read lock
SHRC242=Error updating shared class cache file last detached time
SHRC241=Error\: unable to delete shared class cache file
SHRC240=Error\: unable to acquire shared class cache file attach write lock
EXEX026=\  -jxe <jxeFile>   places jxeFile on the classpath and executes the startup\n                    class found in jxeFile.
EXEX025=Usage\:\t%s [-jxe] [options] <jxeFile> [args...]
EXEX024=JXE %s did not contain a startup class.
EXEX023=Could not initialize JXE utilities.
SHRC239=Error\: unable to acquire shared class cache file header write lock
SHRC238=Error\: the shared class cache is not attached
SHRC599=The raw class data area free space is corrupt ('free space start'\=%p, 'free space end'\=%p, 'free size'\=%lu bytes)
SHRC237=Opened shared classes persistent cache %1$s
SHRC598=The raw class data area is corrupt because its size of %lu is larger than the total cache size of %lu.
SHRC236=Created shared classes persistent cache %1$s
SHRC597=-Xshareclasses\:rcdSize\=%u bytes is greater than %u bytes of available free space, -Xshareclasses\:rcdSize\=%u will be used instead.
SHRC235=Error releasing shared class cache file attach read lock
SHRC596=Do extra checks when storing and allocating out-of-line class data.
SHRC234=Error acquiring shared class cache file attach read lock
SHRC595=Command-line options "%s" and "%s" are incompatible
SHRC233=Error creating shared class cache file header
SHRC594=The -Xshareclasses\:cacheRetransformed sub-option is incompatible with a shared cache created with the enableBCI sub-option
SHRC232=Cannot create a cache in readonly mode
SHRC593=BCI Enabled                          \= false
SHRC231=Error setting shared class cache file length
SHRC592=BCI Enabled                          \= true
SHRC230=Error initialising shared cache data header
SHRC591=%1$d\: 0x%2$p JITHINT\: %4$.*3$s
EXEX017=Error mapping jxe in flash
SHRC590=The "enableBCI" sub-option was specified but the existing cache was not created with the "enableBCI" sub-option.
EXEX016=Invalid jxespace parameters.
EXEX015=VM startup error\: Out of memory
EXEX014=Run %s -help for usage
EXEX013=Internal VM error\: Failed to create Java VM
EXEX012=-jar option is not available for this class library
EXEX010=%s requires a parameter
JDBG021=unrecognized debug option
JDBG020=unrecognized debug option\: '%s'
SHRC229=Error\: shared class cache file has an invalid header
SHRC228=Error updating shared class cache last attached time
SHRC589=Create the cache with support for byte-code instrumentation.
SHRC227=Error acquiring shared class cache file header write lock
SHRC588=Error releasing cross-guest shared class cache header read lock
SHRC226=Error opening shared class cache file 
SHRC587=Error updating cross-guest shared class cache last attached time
SHRC225=Error obtaining cache file path
SHRC586=Error\: cross-guest shared class cache has an invalid header
SHRC224=Out of memory for local copy of cache name
SHRC585=Error acquiring cross-guest shared class cache header write lock
SHRC223=Persistent shared class caches cannot be created/used as file locking is not supported
SHRC584=Error acquiring cross-guest shared class cache attach read lock
SHRC222=Persistent shared class caches cannot be created/used as memory mapping does not support the required capabilities
SHRC583=Error updating "last detached" time for cross-guest shared class cache
SHRC221=Platform error message\: %1$s
EXEX009=\  -verify          enable class file verification.\n  -X               print help on non-standard options.
SHRC582=Error\: unable to delete cross-guest shared class cache
SHRC220=Port layer error code \= %1$d
EXEX008=\  -verbose[\:class,gc,stack,sizes]\n                   enable verbose output (default\=class).\n
SHRC581=Error mapping in cross-guest shared object
EXEX007=\  -jcl\:<config>[\:options]\n                   specify which JCL shared library to use (e.g. cdc, cldc, ...).\n
SHRC580=Error releasing cross-guest shared class cache attach read lock
EXEX006=\  -debug\:<options> enable debug, JDWP standard <options>.\n
JDBG019=unsorted relocation list %zx
EXEX005=\  -D<prop>\=<val>   set the value of a system property.\n
JDBG018=ignoring unrecognized debug option
EXEX004=\  -jxespace\:<physicalAddr>,<size>,<logicalAddr>\n                   map memory region for jxes, (values are in hex).\n  -jxeaddr\:<logicalAddr>\n                   run a jxe directly from memory, (address is in hex).
EXEX003=\  -jxe\:<jxeFile>   run the named jxe file.
JDBG016=jvm attach failed
EXEX002=\n[options]\n  -classpath <path>\n  -cp <path>       set classpath to <path>.
JDBG015=Debug response server
EXEX001=Usage\:\t%s [options] -jxe\:<jxeFile> [args...]
JDBG014=cannot allocate vm->debuggerClassReferences pool
EXEX000=Usage\:\t%s [options] classname [args...]
JDBG013=cannot allocate vm->debuggerReferences pool
JDBG012=j9dbg_init_server failed
JDBG011=cannot allocate debugServer
JDBG010=Example\: java -Xrunjdwp\:transport\=dt_socket,address\=localhost\:8000\n
SHRC219=[-Xshareclasses group access enabled for new caches]
SHRC218=[-Xshareclasses persistent cache disabled]
SHRC579=Error initialising cross-guest shared cache data header
SHRC217=[-Xshareclasses persistent cache enabled]
SHRC578=Error creating header in cross-guest shared class cache
SHRC216=Create non-persistent shared class cache
SHRC577=Cannot create a cross-guest shared cache in readonly mode
SHRC215=Create persistent shared class cache
SHRC576=Cross guest shared cache cannot be opened read-only as it has not yet initialized
SHRC214=Cannot enter ByteDataManager hashtable mutex
SHRC575=Error acquiring write lock for header in cross-guest shared class cache
SHRC213=Cannot allocate memory for hashtable entry in ByteDataManagerImpl
SHRC574=Cross guest shared cache cannot be located on a networked file system. Either select "nonpersistent" or a different cacheDir.
SHRC212=Storing byte data for key %.*s in shared cache...
SHRC573=Command-line option "-Xshareclasses\:%s" requires "-Xvirt"
SHRC211=Finding byte data for key %.*s in shared cache...
SHRC572=Incorrect target specification found. Target specified in cache header is\: %s, but expected is\: %s.
SHRC210=[-Xshareclasses byte data verbose output enabled]
SHRC571=Attached shared classes cross-guest cache %1$s
SHRC570=Cross-guest shared cache "%1$s" has been destroyed
JDBG009=j9methodids\=y|n                 use j9 method ids               n\n
JDBG008=onuncaught\=y|n                  debug on any uncaught?          n
JDBG007=onthrow\=<exception name>        debug on throw                  none
JDBG006=server\=y|n                      listen for debugger?            n
JDBG005=address\=<listen/attach address> transport spec                  "localhost\:8888"
JDBG004=transport\=<name>                transport spec                  none
JDBG003=suspend\=y|n                     wait on startup?                y
JDBG002=---------------------           -----------                     -------
JDBG001=Option Name and Value           Description                     Default
JDBG000=-Xrunjdwp usage\: -Xrunjdwp\:[help]|[<option>\=<value>, ...]\n
SHRC209=Enable byte data verbose output
SHRC208=Cannot allocate memory for hastable item pool in CompiledMethodManagerImpl
SHRC569=Created shared classes cross-guest cache %1$s
SHRC207=Cannot enter CompiledMethodManager hashtable mutex
SHRC568=Opened shared classes cross-guest cache %1$s
SHRC206=Cannot allocate memory for hashtable entry in CompiledMethodManagerImpl
SHRC567=Opened shared class cross-guest cache %1$s read-only
SHRC205=Failed to create new hash table item in CompiledMethodManagerImpl
SHRC566=Cross-guest shared class cache header eyecatcher is invalid
SHRC204=Cannot create hashtable mutex in shared class Manager
SHRC565=Create crossguest shared class cache
SHRC203=Cannot create hashtable in shared class Manager
SHRC564=[-Xshareclasses crossguest shared cache enabled]
SHRC202=Failed to initialize pools in shared class Manager
SHRC563=Opening a Realtime cache, which is not compatible with this JVM, use the -Xrealtime JVM option to access this cache
SHRC201=\ Succeeded replacing %2$.*1$s.
SHRC562=Read corrupt data for cache entry header 0x%p (invalid item length of %u bytes)
SHRC200=\ Succeeded finding %2$.*1$s.
SHRC561=Failed to initialize the shared classes cache, there is not enough space in the file system. Available free disk space bytes \= %lld, requested bytes \= %lld.
SHRC560=Internal cache name is not proper.
SHRC559=Failed to create a directory "%s" for the shared class cache
SHRC558=Available options for -Xshareclasses\:printStats\=<options>. Use '+' to specify multiple options. i.e. printstats\=aot+url \n  
SHRC557=Unrecognised sub-option for option printstats\= . Use printstats\=help to see available options.
SHRC556=Print summary of cache statistics. Use printstats\=help to see available options.
SHRC555=Cache contains classes with line numbers and classes without line numbers
SHRC554=Cache contains only classes without line numbers
SHRC553=Cache contains only classes with line numbers
SHRC552=Cannot allocate requested block size for cache "%s". Available bytes \= %d, Requested bytes \= %d
SHRC551=Cache "%s" is marked as full. Failed to allocate block size \= %d.
SHRC550=ROUND_TO_PAGE_SIZE runtime flag is missing. -Xshareclasses\:checkStringTableReset requires string table be rounded to page size.
SHRC549=-Xshareclasses\:checkStringTableReset may fail. String table is not large enough. It needs to be more than to OS page size. Table size \= %d, Page size \= %d
SHRC548=Force check for string table reset when it is marked as corrupt. 
SHRC547=Cannot allocate memory for character array in shrinit
SHRC546=%1$d\: 0x%2$p UNUSED1\: %4$.*3$s Address\: 0x%5$p Size\: %6$d
SHRC545=%1$d\: 0x%2$p ROMSTRING\: %4$.*3$s Address\: 0x%5$p Size\: %6$d
SHRC544=%1$d\: 0x%2$p VM\: %4$.*3$s Address\: 0x%5$p Size\: %6$d
SHRC543=%1$d\: 0x%2$p AOTDATA\: %4$.*3$s Address\: 0x%5$p Size\: %6$d
SHRC542=%1$d\: 0x%2$p POOL\: %4$.*3$s Address\: 0x%5$p Size\: %6$d
SHRC541=%1$d\: 0x%2$p HELPER\: %4$.*3$s Address\: 0x%5$p Size\: %6$d
SHRC540=%1$d\: 0x%2$p UNKNOWN\: %4$.*3$s Address\: 0x%5$p Size\: %6$d
SHRC539=%1$d\: 0x%2$p AOTTHUNK\: %4$.*3$s Address\: 0x%5$p Size\: %6$d
SHRC538=%1$d\: 0x%2$p AOTCH\: %4$.*3$s Address\: 0x%5$p Size\: %6$d
SHRC537=%1$d\: 0x%2$p JCL\: %4$.*3$s Address\: 0x%5$p Size\: %6$d
SHRC536=%1$d\: 0x%2$p JITHINT\: %4$.*3$s Address\: 0x%5$p Size\: %6$d
SHRC535=\t bytedata\tPrints all other bytedata types in the shared cache. 
SHRC534=\t jcl\t\tPrints only jcl types in the shared cache. 
SHRC533=\t aotdata\tPrints only aotdata types in the shared cache. 
SHRC532=\t aotthunk\tPrints only aotthunk types in the shared cache. 
SHRC531=\t aotch\t\tPrints only aotch types in the shared cache. 
SHRC530=\t jithint\tPrints only jithint types in the shared cache. 
DUMP044=Invalid or reserved valid value for %s
DUMP043=%s not supported on this platform
DUMP042=Abort signal received while running on Java stack. The JVM dump agents could not be run. 
DUMP041=Incorrect use of -Xdump msg_filter 
DUMP040=%1$s dump written to dataset(s) using name template %2$s
SHRC529=\t orphan\t\tPrints only orphan types in the shared cache. 
SHRC528=\t extra\t\tPrints all the following private types in the shared cache. 
SHRC527=\t zipcache\tPrints only zipcache types in the shared cache.
SHRC526=\t jitprofile\tPrints only jitprofile types in the shared cache. 
SHRC525=\t aot\t\tPrints only aot types in the shared cache. 
SHRC524=\t rommethod\tPrints only rommethod types in the shared cache. 
SHRC523=\t romclass\tPrints only romclass types in the shared cache. 
SHRC522=\t token\t\tPrints only token types in the shared cache. 
DUMP039=Processing dump event "%1$s", detail "%3$.*2$s" at %4$s - please wait.
SHRC521=\t url\t\tPrints only url types in the shared cache. 
DUMP038=Snap dump is not written because tracing to file\: %1$s
SHRC520=\t classpath\tPrints only classpath types in the shared cache. 
DUMP037=Error in %1$s dump\: %2$s failed, error code\: %3$d
DUMP036=Invalid or missing -Xdump filter
DUMP035=User requested %1$s dump through %2$s
DUMP034=User requested %1$s dump using '%2$s' through %3$s
DUMP033=JVM requested %1$s dump in response to an event
DUMP032=JVM requested %1$s dump using '%2$s' in response to an event
DUMP031=The requested heapdump has not been produced because the VM exclusive lock was not requested. Add request\=exclusive+prepwalk+compact to your -Xdump\:heap\: command line option.
DUMP030=Cannot write dump to file %s\: %s
SHRC519=\t all\t\tPrints all the following types in the shared cache. 
SHRC518=Available options for -Xshareclasses\:printAllStats\=<options>. Use '+' to specify multiple options. i.e. printallstats\=aot+url \n  
SHRC517=Unrecognised sub-option for option printallstats\= . Use printallstats\=help to see available options.
SHRC516=List all elements in cache by default. Use printallstats\=help to see available options.
SHRC515=Failed to get default cache directory.
SHRC514=Invalid setting for cacheDirPerm option. This must be unix style file permission in the range of 0700 - 0777 or 1700 - 1777 (in octal representation).
SHRC513=Set unix style permissions for creating cache directories
SHRC512=no data in cache
DUMP029=The request for prepwalk or compact before taking a system dump will be ignored because the VM exclusive lock was not requested.
SHRC511=Composite cache has bad initialization flag value. The value of ccInitComplete is %lu
DUMP028=The VM exclusive lock could not be acquired before taking the system dump.
SHRC510=Disable the creation of dumps on corrupted caches
DUMP027=The requested heapdump has not been produced because another component is holding the VM exclusive lock.
DUMP026=IEATDUMP Name exceeding maximum allowed length. Default name used.
DUMP025=IEATDUMP failure for DSN\='%s' RC\=0x%08X RSN\=0x%08X
DUMP024=Multiple heapdumps were requested but %%id is missing from file label\: dumps will overwrite
DUMP023=The requested heap preparation has not been performed because exclusive access was not requested or could not be obtained.
DUMP022=The requested heap compaction has not been performed because exclusive access was not requested or could not be obtained.
DUMP021=The requested heapdump has not been produced because exclusive access was not requested or could not be obtained.
DUMP020=%s dump has been written
SHRC509=Create a cache one generation older than current generation.
SHRC508=Acquired a different semaphore than previously used with this cache. old semid\=%d, new semid\=%d
SHRC507=Do extra checks when storing and allocating class debug data
SHRC506=The debug area is corrupt because its size of %lu is larger than the total cache size of %u stored in the cache header
SHRC505=The debug area is corrupt because free space high address %p minus the free space low address %p exceeds the debug region size of %lu bytes
SHRC504=Cache data start is null. data start\: %p
SHRC503=The debug area is corrupt because storing 'line number table' %d bytes, and 'local variable table' %d bytes, will result in a 'line number table data' high address of %p, which will be greater than the new 'local variable table data' low address %p
SHRC502=The debug area is corrupt because the 'local variable table data' low address %p, is greater than the high address %p
DUMP019=JVM requesting %s dump
SHRC501=The debug area is corrupt because the 'line number table data' low address %p, is greater than the high address %p
DUMP018=Requested event is not available\: run with -Xdump\:dynamic flag
SHRC500=The debug area is corrupt because free space low address %p, is greater than free space high address %p
DUMP017=Aborting\: Cannot compress file (%s)
DUMP016=Aborting\: Cannot create file (%s)
DUMP015=Aborting\: Cannot open or read (%s)
DUMP014=VM Action unrecognized\: ...%s
DUMP013=Processed dump event "%1$s", detail "%3$.*2$s".
DUMP012=Error in %1$s dump\: %2$s
DUMP011=%1$s dump created process %2$d
DUMP010=%1$s dump written to %2$s
EXEL114=\  -XX\:SharedCacheHardLimit\=<x>   set size of new shared class cache to <x>
EXEL113=\  -Xscmx<x>       set size (or soft max size if option -XX\:SharedCacheHardLimit\= is present) of new shared class cache to <x>
EXEL112=\  -Xscsoftmx<x>   set soft max size of new shared class cache to <x>
EXEL111=\  -XX\:+StoreIntermediateClassfile   store raw class data to be used during re-transformation
EXEL110=\  -XX\:ShareClassesDisableBCI   create shared class cache without support for byte-code instrumentation
DUMP009=%s dump not available
DUMP008=using '%s'
DUMP007=JVM Requesting %1$s dump using '%2$s'
DUMP006=Processing dump event "%1$s", detail "%3$.*2$s" - please wait.
DUMP005=Missing external tool
DUMP004=Missing file name
DUMP003=Dump agent unrecognised\: %s
DUMP002=Token unrecognized\: %%%1$c
DUMP001=Dump event unrecognized\: ...%s
DUMP000=Dump option unrecognized\: -Xdump\:%s
TNNT004=Malformed tenant.properties file (%1$s).  Cannot decode required key\='%2$s' value\='%3$s'
TNNT003=Malformed tenant.properties, file (%1$s) missing required key (%2$s)
TNNT002=Could not read required isolation properties file (%1$s)
EXEL109=\  -XX\:ShareClassesEnableBCI   create shared class cache with support for byte-code instrumentation
TNNT001=Could not allocate memory for tenant launcher
EXEL108=\  -Xzero\:nosharebootzip   do not share bootstrap jar entry caches in the shared class cache
TNNT000=Tenant support enabled.
EXEL107=\  -Xscmaxjitdata<x>   set maximum shared classes cache space allowed for JIT data to <x>
EXEL106=\  -Xscminjitdata<x>   set minimum shared classes cache space reserved for JIT data to <x>
EXEL105=\  -Xscmaxjit<x>   set maximum shared classes cache space allowed for JIT data to <x>
EXEL104=\  -Xscminjit<x>   set minimum shared classes cache space reserved for JIT data to <x>
EXEL103=\  -Xscdmx<x>      set size of shared class cache debug attribute area to <x>
EXEL102=\n  -Xdiagnosticscollector enable the Diagnostics Collector
EXEL101=\n  -Xhealthcenter  enable the Health Center agent
EXEL100=\  -Xgcpolicy\:metronome -Xnortsj enable soft realtime
CFRE099=illegal method modifiers
CFRE098=local variable signature must be a string
CFRE097=duplicate inner class entry in InnerClasses attribute
CFRE096=target not instruction in switch bytecode
CFRE095=annotations must be interfaces
CFRE094=instanceof bytecode must reference a class
CFRE093=method can be at most one of public private or protected
CFRE092=signature invalid
CFRE091=exception handler start PC is not an instruction
CFRE090=new bytecode cannot create arrays
CFRE089=expecting name and type
CFRE088=local variable name must be a string
CFRE087=interface method bytecode must reference an InterfaceMethodref
CFRE086=method has two Code attributes
CFRE085=inner name must be a string
CFRE084=no error
CFRE083=class is both abstract and final
CFRE082=<init> method may not be static, final, synchronized, native or abstract
CFRE081=source file must be a UTF8
CFRE080=method signature is invalid
CFRE079=exception handler PC is invalid
CFRE078=enclosing method class index must reference a class
CFRE077=interfaces must be abstract
CFRE076=bad magic number
CFRE075=local variable signature invalid
CFRE074=no Code attribute specified
CFRE073=StackMap/StackMapTable attribute found outside Code attribute
CFRE072=entries not sorted in lookupswitch bytecode
CFRE071=bytecode array is empty
CFRE070=line number PC invalid
SHRC818=Total unstored bytes due to the setting of shared cache soft max is %u. Unstored AOT bytes due to the setting of -Xscmaxaot is %u. Unstored JIT bytes due to the setting of -Xscmaxjitdata is %u.
SHRC817=%s value is greater than the shared cache size, so it has been set to unlimited
SHRC816=%s value is greater than the shared cache size, so it has been set to equal the shared cache size.
SHRC815=stale bytes                         %*c\= %u
SHRC814=\t stale\t\tPrints all the stale entries in the shared cache. 
SHRC813=Total unstored bytes due to the setting of -Xscsoftmx is %u. Unstored AOT bytes due to the setting of -Xscmaxaot is %u. Unstored JIT bytes due to the setting of -Xscmaxjitdata is %u.
SHRC812=Feature                              \= %s
SHRC811=Non-compressed references shared cache snapshot "%s" is destroyed. Use option -Xcompressedrefs if you want to destroy a compressed references cache snapshot.
SHRC810=Compressed references shared cache snapshot "%s" is destroyed. Use option -Xnocompressedrefs if you want to destroy a non-compressed references cache snapshot.
CFRE069=attribute length greater than attribute data
CFRE068=class name is invalid
CFRE067=unknown constant pool entry tag
CFRE066=multiple InnerClasses attributes
CFRE065=multiple enclosing method attributes
CFRE064=descriptor must be a UTF8 string
CFRE063=invoke bytecode calls invalid method
CFRE062=max locals smaller than arguments size
CFRE061=name must be a UTF8 string
CFRE060=exception handler end PC is not an instruction or the end of the bytecode array
SHRC809=Non-compressed references shared cache "%s" is destroyed. Use option -Xcompressedrefs if you want to destroy a compressed references cache.
SHRC808=Compressed references shared cache "%s" is destroyed. Use option -Xnocompressedrefs if you want to destroy a non-compressed references cache.
SHRC807=Non-compressed references persistent shared cache "%1$s" has been destroyed. Use option -Xcompressedrefs if you want to destroy a compressed references cache.
SHRC806=Compressed references persistent shared cache "%1$s" has been destroyed. Use option -Xnocompressedrefs if you want to destroy a non-compressed references cache.
SHRC805=The JVM has not enabled protecting shared cache partially filled pages on startup.
SHRC804=The JVM has enabled shared cache partial page protection on startup as the existing shared cache was created with partial page protection enabled on startup.
SHRC803=Enable memory protection of partially filled pages on startup.
SHRC802=Cache is %1$d%% soft full\n
SHRC801=softmx bytes                        %*c\= %d
SHRC800=The shared cache is full. The minimum reserved and maximum allowed AOT/JIT data space, and softmx limit cannot be adjusted anymore.
CFRE059=exception handler PC is not an instruction
CFRE058=local variable index out of range in subroutine return
CFRE057=exception handler type must be a class
CFRE056=invokeinterface bytecode argument count wrong
CFRE055=exception handler end PC is invalid
CFRE054=field bytecode must reference a Fieldref
CFRE053=method has more than 255 argument slots
CFRE052=outer class must be a class
CFRE051=string constant must be a string
CFRE050=interface method must be public and abstract
J9TI067=Cancel a subscription to VM tracepoints
J9TI066=Create a subscription to VM tracepoints
J9TI065=Agent initialization function %s not found in library %s
J9TI064=Agent initialization function %s failed for library %s, return code %d
J9TI063=Gets the J9Method pointer from JMethodID
J9TI062=Gets the J9VMThread pointer from a jthread
J9TI061=Cancel a subscription to verbose GC records
J9TI060=Create a subscription to verbose GC records
CFRE049=checkcast bytecode must reference a class
CFRE048=local variable index out of range in store
CFRE047=interface class may only be public, abstract, or annotation
CFRE046=switch bytecode padding incorrect
CFRE045=constant pool index out of range
CFRE044=invokeinterface bytecode reserved slot not zero
CFRE043=bytecode cannot be made wide
CFRE042=bytecode array size > 65535
CFRE041=bad minor version
CFRE040=attribute length less than attribute data
J9TI059=Get the amount of native memory used by the JVM, broken down under memory categories.
J9TI058=Could not set JVM log options.
J9TI057=Could not convert JVM log options native string.
J9TI056=Could not query JVM log options.
J9TI055=Could not allocate buffer for JVM log options.
J9TI054=Request a Java Lock Monitor (JLM) dump with a format specifier.
J9TI053=Set the VM log options.
J9TI052=Query the current VM log options.
J9TI051=Clear per-method flag for selective entry and exit notification.
J9TI050=Get a hash code for an object's monitor.
RCMT000=Resource management enabled.
CFRE039=local variable index out of range in load
CFRE038=method has two Exceptions attributes
CFRE037=temp contains wrong type
CFRE036=target not instruction in jump bytecode
CFRE035=new bytecode must reference a class
CFRE034=bytecode incomplete
CFRE033=exception handler range is empty
CFRE032=interface superclass must be java.lang.Object
CFRE031=thrown exception must be a class
CFRE030=null superclass
J9TI049=Return Class, Method and Package names for a set of RAM Method pointers
J9TI048=Gets trace metadata that can used with the formatter to process trace buffers
J9TI047=All in use trace records are switched out and passed to trace subscribers
J9TI046=Cancel a subscription to external trace records
J9TI045=Create a subscription to external trace records
J9TI044=Delete all object tags.
J9TI043=Signal class load only for array classes.
J9TI042=Signal autotags for newly allocated object and its class.
J9TI041=Signal the object(s) renamed event (moved or deleted).
J9TI040=Adds the extended capability can_autotag_objects.
CFRE029=multianewarray bytecode must reference a class
CFRE028=ldc* bytecode must reference a constant
CFRE027=multianewarray bytecode must reference an array class
CFRE026=newarray bytecode type unrecognized
CFRE025=field has two ConstantValue attributes
CFRE024=class name must be a string
CFRE023=constant pool empty
CFRE022=thisClass must be a class
CFRE021=duplicate field
CFRE020=exception handler start PC is invalid
J9TI039=Destroy a named shared cache.
J9TI038=Iterate over shared caches.
J9TI037=Get the heap total memory.
J9TI036=Get the current heap free memory.
J9TI035=Garbage collection cycle finished.
J9TI034=Garbage collection cycle started.
J9TI033=Reset the VM dump options.
J9TI032=Indicates that a thread has processed the async event
J9TI031=Cancel the async event on a single thread or all threads
J9TI030=Signal the async event on a single thread or all threads
CFRE019=local variable PC start invalid
CFRE018=inner class must be a class
CFRE017=multiple StackMap/StackMapTable attributes
CFRE016=local variable index out of range in increment
CFRE015=interfaces must be classes
CFRE014=Code attribute specified for a native or abstract method
CFRE013=local variable PC length invalid
CFRE012=constant value must be a value
CFRE011=anewarray bytecode must reference a class
CFRE010=negative count for match and offset pairs in lookupswitch bytecode
J9TI029=Query RAS dump agent configuration.
J9TI028=Report the end of a RAS dump.
J9TI027=Report the start of a RAS dump.
J9TI026=Trigger a dump using the given RAS configuration.
J9TI025=Allow direct JNI in the presence of method enter and exit events (resulting in possibly inaccurate reporting of enter and exit)
J9TI024=Method exit without the return value.
J9TI023=Get extended frame information for a thread list.
J9TI022=Get extended frame information for all stack traces.
J9TI021=Get extended frame information
J9TI020=Gets the OS thread ID from a jthread
CFRE009=interface field must be public static and final
CFRE008=high < low in tableswitch bytecode
CFRE007=field signature is invalid
CFRE006=invalid StackMap/StackMapTable attribute
CFRE005=duplicate interface
CFRE004=unknown bytecode
JNCK099=JNI error in %1$s\: argument \#%2$d requires a non-array type
CFRE003=bad major version
JVMP000=Attempt to instrument %.*s through JVMPI was disallowed
JNCK098=JNI error in %1$s\: argument \#%2$d expects %3$s %4$s, actual argument is %5$s %6$s
CFRE002=method name is invalid
JNCK097=\tadvice         display advice
CFRE001=%1$s; class\=%3$.*2$s, offset\=%4$u
JNCK096=\twarn           display warnings
CFRE000=%1$s; class\=%3$.*2$s, method\=%5$.*4$s%7$.*6$s, pc\=%8$u
JNCK095=JNI error in returned value\: the return type is a reference but the value (0x%1$p) is not a valid object reference. Its type is\: %2$s
JNCK094=JNI error in %1$s\: The data pointed at by argument \#%2$d was modified during the execution of %3$s. The data may have been modified by another thread or by a nested call. The result of %4$s may be incorrect and the VM may become unstable
JNCK093=JNI error in %s\: Method is not a constructor
J9TI019=Sets notification mode for extended events, allowing thread-level selectivity
JNCK092=\tvalist         check for va_list reuse
J9TI018=Sets a method for selective entry and exit notification.
JNCK091=Advice detected in handler frame of a JVMPI or JVMTI event\n
J9TI017=Controls various VM and compiling options. 
JNCK090=Warning detected in handler frame of a JVMPI or JVMTI event\n
J9TI016=Allow inlining in the presence of method enter and exit events (resulting in possibly inaccurate reporting of enter and exit)
J9TI015=Request a Java Lock Monitor (JLM) dump.
J9TI014=Controls Java Lock Monitor (JLM) (COM_IBM_JLM_START, COM_IBM_JLM_START_TIME_STAMP, COM_IBM_JLM_STOP, COM_IBM_JLM_STOP_TIME_STAMP).
J9TI013=Allows callbacks for instrumentable allocates (those not reported by VMObjectAlloc).
J9TI012=Add a dynamic -Xdump option
J9TI011=Add a dynamic -Xtrace option
J9TI010=Method entry with extended information about method type.
JNCK089=Error detected in the handler frame of a JVMPI or JVMTI event\n
JNCK088=JNI warning in %1$s\: Argument \#%2$d is a weak reference. A weak reference may become NULL at any time. The reference should be promoted using NewLocalRef or NewGlobalRef and then compared to NULL before calling %3$s
JNCK087=JNI error in %1$s\: Argument \#%2$d is not a java/lang/reflect/Method or java/lang/reflect/Constructor
JNCK086=JNI warning in %1$s\: Argument \#%2$d is not a java/nio/Buffer. %3$s will return an error code
JNCK085=Advice detected in JNI_OnLoad of library %.*s\n
JNCK084=Warning detected in JNI_OnLoad of library %.*s\n
JNCK083=Error detected in JNI_OnLoad of library %.*s\n
J9TI009=Indicates the end of a JIT compilation phase. (Not callback safe)
JNCK082=Advice detected in the outermost frame of an attached thread\n
J9TI008=Indicates the start of a JIT compilation phase. (Not callback safe)
JNCK081=Warning detected in the outermost frame of an attached thread\n
J9TI007=Get the current set of extended capabilities via capabilities_ptr.
JNCK080=Error detected in the outermost frame of an attached thread\n
J9TI006=Relinquish the extended capabilities from capabilities_ptr.
J9TI005=Add the new extended capabilities from capabilities_ptr.
J9TI004=Returns via the capabilities_ptr the extended capabilities available at this time.
J9TI003=Agent_OnLoad failed for library %s
J9TI002=Agent_OnLoad not found in library %s
J9TI001=Agent library %1$s could not be opened (%2$s)
J9TI000=Out of memory attempting to load agent library %s
JNCK079=Advice detected in %2$.*1$s.%4$.*3$s%6$.*5$s\n
JNCK078=Warning detected in %2$.*1$s.%4$.*3$s%6$.*5$s\n
JNCK077=Error detected in %2$.*1$s.%4$.*3$s%6$.*5$s\n
JNCK076=Internal jnichk error in %s\: Out of memory
JNCK075=Internal jnichk error in %1$s\: Unrecognized descriptor 0x%2$x
JNCK074=JNI advice in %s\: Buffer appears to be unmodified. Consider using JNI_ABORT instead of mode 0.
JNCK073=JNI advice in %1$s\: JNI_ABORT was specified, but cannot be honoured because data has been modified.\n(Original CRC\=0x%2$x, new CRC\=0x%3$x).\nSince %4$s returned the actual array contents, the changes will not be discarded. This may not be what you wanted.
JNCK072=JNI advice in %1$s\: JNI_COMMIT was specified, but will be ignored.\nSince %2$s returned the actual array contents, the buffer will be invalid following this call. This may not be what you wanted.
JNCK071=JNI warning\: Memory at 0x%1$p acquired by %2$s was not released before returning from native. This is probably a memory leak.
JNCK070=JNI warning in %1$s\: Original array data was modified between %2$s and %3$s.\n(Original CRC\=0x%4$x, new CRC\=0x%5$x).\nSince %6$s returned a copy of the array contents, the new contents will be lost.
JNCK069=JNI warning in %1$s\: End is out of range (%2$d + %3$d > %4$d)
JNCK068=JNI warning in %1$s\: Start or index is out of range (%2$d >\= %3$d)
JNCK067=JNI warning in %1$s\: Negative region length (%2$d) specified
JNCK066=JNI warning in %1$s\: Negative start or index (%2$d) specified
JNCK065=JNI warning in %1$s\: Automatically grew local reference frame capacity from %2$d to %3$d. %4$d references are in use.\nUse EnsureLocalCapacity or PushLocalFrame to explicitly grow the frame.
JNCK064=JNI warning in %1$s\: Automatically grew global weak reference pool capacity from %2$d to %3$d.\nThis may be an indicator of a memory leak.
JNCK063=JNI warning in %1$s\: Automatically grew global reference pool capacity from %2$d to %3$d.\nThis may be an indicator of a memory leak.
JNCK062=JNI warning in %s\: This function should not be called inside of a critical section
JNCK061=JNI warning in %1$s\: Argument \#%2$d is a malformed field signature ("%3$s")
JNCK060=JNI warning in %1$s\: Argument \#%2$d is a malformed method signature ("%3$s")
JNCK059=JNI warning in %1$s\: Argument \#%2$d is a malformed identifier ("%3$s")
JNCK058=JNI warning in %1$s\: After calling %2$s, you must check for exceptions using ExceptionCheck, ExceptionClear or ExceptionOccurred before calling %3$s
JNCK057=JNI error in %1$s\: Do not use %2$s to release memory 0x%3$p acquired using %4$s
JNCK056=JNI error in %1$s\: Got memory 0x%2$p from object 0x%3$p, releasing from 0x%4$p
JNCK055=JNI error in %1$s\: Pointer 0x%2$p was not returned by any JNI function, or was already released
JNCK054=JNI error in %1$s\: Unrecognized mode option %2$d
JNCK053=JNI error\: Critical section must be released before function returns
JNCK052=JNI error in %1$s\: Class %3$.*2$s is obsolete
SHRC199=\ Succeeded storing %2$.*1$s.
JNCK051=Internal VM error in %1$s\: Pushed bytes %2$p is smaller than JNI reference bytes %3$p
SHRC198=Storing AOT code for ROMMethod 0x%1$p in shared cache...
JNCK050=JNI error in %s\: PopLocalFrame called without a local frame on the stack
SHRC197=Finding AOT code for ROMMethod 0x%1$p in shared cache...
SHRC196=[-Xshareclasses AOT verbose output enabled]
SHRC195=Enable AOT verbose output
SHRC194=\tfor ROMClass %2$.*1$s at 0x%3$p.
SHRC193=%1$d\: 0x%2$p AOT\: %4$.*3$s
SHRC192=-Xscmaxaot value is greater than -Xscmx value, so it has been set to unlimited
SHRC191=-Xscminaot value is greater than -Xscmx value, so it has been set to equal -Xscmx value
SHRC190=-Xscminaot value should not be greater than -Xscmaxaot value
